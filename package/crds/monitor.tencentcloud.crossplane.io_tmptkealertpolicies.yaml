---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: tmptkealertpolicies.monitor.tencentcloud.crossplane.io
spec:
  group: monitor.tencentcloud.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - tencentcloudjet
    kind: TmpTkeAlertPolicy
    listKind: TmpTkeAlertPolicyList
    plural: tmptkealertpolicies
    singular: tmptkealertpolicy
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: TmpTkeAlertPolicy is the Schema for the TmpTkeAlertPolicys API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TmpTkeAlertPolicySpec defines the desired state of TmpTkeAlertPolicy
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  alertRule:
                    description: Alarm notification channels.
                    items:
                      properties:
                        clusterId:
                          description: If the alarm policy is derived from the CRD
                            resource definition of the user cluster, the ClusterId
                            is the cluster ID to which it belongs.
                          type: string
                        id:
                          description: 'Alarm policy ID. Note: This field may return
                            null, indicating that a valid value could not be retrieved.'
                          type: string
                        name:
                          description: Policy name.
                          type: string
                        notification:
                          description: Alarm channels, which may be returned using
                            null in the template.
                          items:
                            properties:
                              alertManager:
                                description: 'If Type is alertmanager, the field is
                                  required. Note: This field may return null, indicating
                                  that a valid value could not be retrieved..'
                                items:
                                  properties:
                                    clusterId:
                                      description: 'The ID of the cluster where the
                                        alertmanager is deployed. Note: This field
                                        may return null, indicating that a valid value
                                        could not be retrieved.'
                                      type: string
                                    clusterType:
                                      description: 'Alertmanager is deployed in the
                                        cluster type. Note: This field may return
                                        null, indicating that a valid value could
                                        not be retrieved.'
                                      type: string
                                    url:
                                      description: Alertmanager url.
                                      type: string
                                  required:
                                  - url
                                  type: object
                                type: array
                              enabled:
                                description: Whether it is enabled.
                                type: boolean
                              notifyWay:
                                description: Alarm notification method. At present,
                                  there are SMS, EMAIL, CALL, WECHAT methods.
                                items:
                                  type: string
                                type: array
                              phoneArriveNotice:
                                description: Telephone alerts reach notifications.
                                type: boolean
                              phoneCircleInterval:
                                description: 'Effective end timeTelephone alarm wheel
                                  interval. Units: Seconds.'
                                type: number
                              phoneCircleTimes:
                                description: PhoneCircleTimes.
                                type: number
                              phoneInnerInterval:
                                description: 'Telephone alarm wheel intervals. Units:
                                  Seconds.'
                                type: number
                              phoneNotifyOrder:
                                description: Telephone alarm sequence.
                                items:
                                  type: number
                                type: array
                              receiverGroups:
                                description: Alert Receiving Group (User Group).
                                items:
                                  type: string
                                type: array
                              repeatInterval:
                                description: Convergence time.
                                type: string
                              timeRangeEnd:
                                description: Effective end time.
                                type: string
                              timeRangeStart:
                                description: The time from which it takes effect.
                                type: string
                              type:
                                description: The channel type, which defaults to amp,
                                  supports the following `amp`, `webhook`, `alertmanager`.
                                type: string
                              webHook:
                                description: 'If Type is webhook, the field is required.
                                  Note: This field may return null, indicating that
                                  a valid value could not be retrieved.'
                                type: string
                            required:
                            - enabled
                            - type
                            type: object
                          type: array
                        rules:
                          description: A list of rules.
                          items:
                            properties:
                              annotations:
                                description: Refer to annotations in prometheus rule.
                                items:
                                  properties:
                                    name:
                                      description: Name of map.
                                      type: string
                                    value:
                                      description: Value of map.
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              describe:
                                description: A description of the rule.
                                type: string
                              for:
                                description: Time of duration.
                                type: string
                              labels:
                                description: Extra labels.
                                items:
                                  properties:
                                    name:
                                      description: Name of map.
                                      type: string
                                    value:
                                      description: Value of map.
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              name:
                                description: Rule name.
                                type: string
                              rule:
                                description: Prometheus statement.
                                type: string
                              ruleState:
                                description: Alarm rule status.
                                type: number
                              template:
                                description: Alert sending template.
                                type: string
                            required:
                            - for
                            - labels
                            - name
                            - rule
                            - template
                            type: object
                          type: array
                        templateId:
                          description: If the alarm is sent from a template, the TemplateId
                            is the template id.
                          type: string
                        updatedAt:
                          description: Last modified time.
                          type: string
                      required:
                      - name
                      - rules
                      type: object
                    type: array
                  instanceId:
                    description: Instance Id.
                    type: string
                  instanceIdRef:
                    description: A Reference to a named object.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  instanceIdSelector:
                    description: A Selector selects an object.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                required:
                - alertRule
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: TmpTkeAlertPolicyStatus defines the observed state of TmpTkeAlertPolicy.
            properties:
              atProvider:
                properties:
                  id:
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
