---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: alarmpolicies.monitor.tencentcloud.crossplane.io
spec:
  group: monitor.tencentcloud.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - tencentcloudjet
    kind: AlarmPolicy
    listKind: AlarmPolicyList
    plural: alarmpolicies
    singular: alarmpolicy
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: AlarmPolicy is the Schema for the AlarmPolicys API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AlarmPolicySpec defines the desired state of AlarmPolicy
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  conditions:
                    description: A list of metric trigger condition.
                    items:
                      properties:
                        isUnionRule:
                          description: The and or relation of indicator alarm rule.
                          type: number
                        rules:
                          description: A list of metric trigger condition.
                          items:
                            properties:
                              continuePeriod:
                                description: Number of periods.
                                type: number
                              description:
                                description: Metric display name, which is used in
                                  the output parameter.
                                type: string
                              filter:
                                description: Filter condition for one single trigger
                                  rule. Must set it when create tke-xxx rules.
                                items:
                                  properties:
                                    dimensions:
                                      description: JSON string generated by serializing
                                        the AlarmPolicyDimension two-dimensional array.
                                      type: string
                                    type:
                                      description: 'Filter condition type. Valid values:
                                        DIMENSION (uses dimensions for filtering).'
                                      type: string
                                  type: object
                                type: array
                              isPowerNotice:
                                description: Whether the alarm frequency increases
                                  exponentially.
                                type: number
                              metricName:
                                description: Metric name or event name.
                                type: string
                              noticeFrequency:
                                description: Alarm interval in seconds.
                                type: number
                              operator:
                                description: Operator.
                                type: string
                              period:
                                description: Statistical period in seconds.
                                type: number
                              ruleType:
                                description: Trigger condition type.
                                type: string
                              unit:
                                description: Unit, which is used in the output parameter.
                                type: string
                              value:
                                description: Threshold.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  conditonTemplateId:
                    description: ID of trigger condition template.
                    type: number
                  enable:
                    description: Whether to enable, default is `1`.
                    type: number
                  eventConditions:
                    description: A list of event trigger condition.
                    items:
                      properties:
                        continuePeriod:
                          description: Number of periods.
                          type: number
                        description:
                          description: Metric display name, which is used in the output
                            parameter.
                          type: string
                        filter:
                          description: Filter condition for one single trigger rule.
                            Must set it when create tke-xxx rules.
                          items:
                            properties:
                              dimensions:
                                description: JSON string generated by serializing
                                  the AlarmPolicyDimension two-dimensional array.
                                type: string
                              type:
                                description: 'Filter condition type. Valid values:
                                  DIMENSION (uses dimensions for filtering).'
                                type: string
                            type: object
                          type: array
                        isPowerNotice:
                          description: Whether the alarm frequency increases exponentially.
                          type: number
                        metricName:
                          description: Metric name or event name.
                          type: string
                        noticeFrequency:
                          description: Alarm interval in seconds.
                          type: number
                        operator:
                          description: Operator.
                          type: string
                        period:
                          description: Statistical period in seconds.
                          type: number
                        ruleType:
                          description: Trigger condition type.
                          type: string
                        unit:
                          description: Unit, which is used in the output parameter.
                          type: string
                        value:
                          description: Threshold.
                          type: string
                      type: object
                    type: array
                  monitorType:
                    description: The type of monitor.
                    type: string
                  namespace:
                    description: The type of alarm.
                    type: string
                  noticeIds:
                    description: List of notification rule IDs.
                    items:
                      type: string
                    type: array
                  noticeIdsRefs:
                    items:
                      description: A Reference to a named object.
                      properties:
                        name:
                          description: Name of the referenced object.
                          type: string
                        policy:
                          description: Policies for referencing.
                          properties:
                            resolution:
                              default: Required
                              description: Resolution specifies whether resolution
                                of this reference is required. The default is 'Required',
                                which means the reconcile will fail if the reference
                                cannot be resolved. 'Optional' means this reference
                                will be a no-op if it cannot be resolved.
                              enum:
                              - Required
                              - Optional
                              type: string
                            resolve:
                              description: Resolve specifies when this reference should
                                be resolved. The default is 'IfNotPresent', which
                                will attempt to resolve the reference only when the
                                corresponding field is not present. Use 'Always' to
                                resolve the reference on every reconcile.
                              enum:
                              - Always
                              - IfNotPresent
                              type: string
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  noticeIdsSelector:
                    description: A Selector selects an object.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  policyName:
                    description: The name of policy.
                    type: string
                  policyTag:
                    description: Policy tag to bind object.
                    items:
                      properties:
                        key:
                          description: Tag key.
                          type: string
                        value:
                          description: Tag value.
                          type: string
                      required:
                      - key
                      - value
                      type: object
                    type: array
                  projectId:
                    description: Project ID. For products with different projects,
                      a value other than -1 must be passed in.
                    type: number
                  remark:
                    description: The remark of policy group.
                    type: string
                  triggerTasks:
                    description: Triggered task list.
                    items:
                      properties:
                        taskConfig:
                          description: Configuration information in JSON format.
                          type: string
                        type:
                          description: Triggered task type.
                          type: string
                      required:
                      - taskConfig
                      - type
                      type: object
                    type: array
                required:
                - monitorType
                - namespace
                - policyName
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: AlarmPolicyStatus defines the observed state of AlarmPolicy.
            properties:
              atProvider:
                properties:
                  createTime:
                    type: string
                  id:
                    type: string
                  updateTime:
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
