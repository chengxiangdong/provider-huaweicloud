---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: scalingconfigs.as.tencentcloud.crossplane.io
spec:
  group: as.tencentcloud.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - tencentcloudjet
    kind: ScalingConfig
    listKind: ScalingConfigList
    plural: scalingconfigs
    singular: scalingconfig
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ScalingConfig is the Schema for the ScalingConfigs API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ScalingConfigSpec defines the desired state of ScalingConfig
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  camRoleName:
                    description: CAM role name authorized to access.
                    type: string
                  configurationName:
                    description: Name of a launch configuration.
                    type: string
                  dataDisk:
                    description: Configurations of data disk.
                    items:
                      properties:
                        deleteWithInstance:
                          description: Indicates whether the disk remove after instance
                            terminated. Default is `false`.
                          type: boolean
                        diskSize:
                          description: Volume of disk in GB. Default is `0`.
                          type: number
                        diskType:
                          description: 'Types of disk. Valid values: `CLOUD_PREMIUM`
                            and `CLOUD_SSD`. valid when disk_type_policy is ORIGINAL.'
                          type: string
                        snapshotId:
                          description: Data disk snapshot ID.
                          type: string
                      type: object
                    type: array
                  diskTypePolicy:
                    description: 'Policy of cloud disk type. Valid values: `ORIGINAL`
                      and `AUTOMATIC`. Default is `ORIGINAL`.'
                    type: string
                  enhancedMonitorService:
                    description: To specify whether to enable cloud monitor service.
                      Default is `TRUE`.
                    type: boolean
                  enhancedSecurityService:
                    description: To specify whether to enable cloud security service.
                      Default is `TRUE`.
                    type: boolean
                  hostNameSettings:
                    description: Related settings of the cloud server hostname (HostName).
                    items:
                      properties:
                        hostName:
                          description: 'The host name of the cloud server; dots (.)
                            and dashes (-) cannot be used as the first and last characters
                            of HostName, and cannot be used consecutively; Windows
                            instances are not supported; other types (Linux, etc.)
                            instances: the character length is [2, 40], it is allowed
                            to support multiple dots, and there is a paragraph between
                            the dots, and each paragraph is allowed to consist of
                            letters (no uppercase and lowercase restrictions), numbers
                            and dashes (-). Pure numbers are not allowed.'
                          type: string
                        hostNameStyle:
                          description: The style of the host name of the cloud server,
                            the value range includes `ORIGINAL` and `UNIQUE`, the
                            default is `ORIGINAL`; `ORIGINAL`, the AS directly passes
                            the HostName filled in the input parameter to the CVM,
                            and the CVM may append a sequence to the HostName number,
                            the HostName of the instance in the scaling group will
                            conflict; `UNIQUE`, the HostName filled in as a parameter
                            is equivalent to the host name prefix, AS and CVM will
                            expand it, and the HostName of the instance in the scaling
                            group can be guaranteed to be unique.
                          type: string
                      required:
                      - hostName
                      type: object
                    type: array
                  imageId:
                    description: An available image ID for a cvm instance.
                    type: string
                  instanceChargeType:
                    description: 'Charge type of instance. Valid values are `PREPAID`,
                      `POSTPAID_BY_HOUR`, `SPOTPAID`. The default is `POSTPAID_BY_HOUR`.
                      NOTE: `SPOTPAID` instance must set `spot_instance_type` and
                      `spot_max_price` at the same time.'
                    type: string
                  instanceChargeTypePrepaidPeriod:
                    description: 'The tenancy (in month) of the prepaid instance,
                      NOTE: it only works when instance_charge_type is set to `PREPAID`.
                      Valid values are `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`,
                      `10`, `11`, `12`, `24`, `36`.'
                    type: number
                  instanceChargeTypePrepaidRenewFlag:
                    description: 'Auto renewal flag. Valid values: `NOTIFY_AND_AUTO_RENEW`:
                      notify upon expiration and renew automatically, `NOTIFY_AND_MANUAL_RENEW`:
                      notify upon expiration but do not renew automatically, `DISABLE_NOTIFY_AND_MANUAL_RENEW`:
                      neither notify upon expiration nor renew automatically. Default
                      value: `NOTIFY_AND_MANUAL_RENEW`. If this parameter is specified
                      as `NOTIFY_AND_AUTO_RENEW`, the instance will be automatically
                      renewed on a monthly basis if the account balance is sufficient.
                      NOTE: it only works when instance_charge_type is set to `PREPAID`.'
                    type: string
                  instanceNameSettings:
                    description: Settings of CVM instance names.
                    items:
                      properties:
                        instanceName:
                          description: CVM instance name.
                          type: string
                        instanceNameStyle:
                          description: 'Type of CVM instance name. Valid values: `ORIGINAL`
                            and `UNIQUE`. Default is `ORIGINAL`.'
                          type: string
                      required:
                      - instanceName
                      type: object
                    type: array
                  instanceTags:
                    additionalProperties:
                      type: string
                    description: A list of tags used to associate different resources.
                    type: object
                  instanceTypes:
                    description: Specified types of CVM instances.
                    items:
                      type: string
                    type: array
                  internetChargeType:
                    description: 'Charge types for network traffic. Valid values:
                      `BANDWIDTH_PREPAID`, `TRAFFIC_POSTPAID_BY_HOUR` and `BANDWIDTH_PACKAGE`.'
                    type: string
                  internetMaxBandwidthOut:
                    description: Max bandwidth of Internet access in Mbps. Default
                      is `0`.
                    type: number
                  keepImageLogin:
                    description: Specify whether to keep original settings of a CVM
                      image. And it can't be used with password or key_ids together.
                    type: boolean
                  keyIds:
                    description: ID list of keys.
                    items:
                      type: string
                    type: array
                  passwordSecretRef:
                    description: Password to access.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  projectId:
                    description: Specifys to which project the configuration belongs.
                    type: number
                  publicIpAssigned:
                    description: Specify whether to assign an Internet IP address.
                    type: boolean
                  securityGroupIds:
                    description: Security groups to which a CVM instance belongs.
                    items:
                      type: string
                    type: array
                  spotInstanceType:
                    description: 'Type of spot instance, only support `one-time` now.
                      Note: it only works when instance_charge_type is set to `SPOTPAID`.'
                    type: string
                  spotMaxPrice:
                    description: 'Max price of a spot instance, is the format of decimal
                      string, for example "0.50". Note: it only works when instance_charge_type
                      is set to `SPOTPAID`.'
                    type: string
                  systemDiskSize:
                    description: Volume of system disk in GB. Default is `50`.
                    type: number
                  systemDiskType:
                    description: 'Type of a CVM disk. Valid values: `CLOUD_PREMIUM`
                      and `CLOUD_SSD`. Default is `CLOUD_PREMIUM`. valid when disk_type_policy
                      is ORIGINAL.'
                    type: string
                  userData:
                    description: ase64-encoded User Data text, the length limit is
                      16KB.
                    type: string
                required:
                - configurationName
                - imageId
                - instanceTypes
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: ScalingConfigStatus defines the observed state of ScalingConfig.
            properties:
              atProvider:
                properties:
                  createTime:
                    type: string
                  id:
                    type: string
                  status:
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
