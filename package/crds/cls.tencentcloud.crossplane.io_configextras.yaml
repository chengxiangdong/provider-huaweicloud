---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: configextras.cls.tencentcloud.crossplane.io
spec:
  group: cls.tencentcloud.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - tencentcloudjet
    kind: ConfigExtra
    listKind: ConfigExtraList
    plural: configextras
    singular: configextra
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ConfigExtra is the Schema for the ConfigExtras API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ConfigExtraSpec defines the desired state of ConfigExtra
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  configFlag:
                    description: Collection configuration flag.
                    type: string
                  containerFile:
                    description: Container file path info.
                    items:
                      properties:
                        container:
                          description: Container name.
                          type: string
                        excludeLabels:
                          description: Pod label to be excluded.
                          items:
                            type: string
                          type: array
                        excludeNamespace:
                          description: Namespaces to be excluded, separated by separators,
                            such as A, B.
                          type: string
                        filePattern:
                          description: log name.
                          type: string
                        includeLabels:
                          description: Pod label info.
                          items:
                            type: string
                          type: array
                        logPath:
                          description: Log Path.
                          type: string
                        namespace:
                          description: Namespace. There can be multiple namespaces,
                            separated by separators, such as A, B.
                          type: string
                        workload:
                          description: Workload info.
                          items:
                            properties:
                              container:
                                description: container name.
                                type: string
                              kind:
                                description: workload type.
                                type: string
                              name:
                                description: workload name.
                                type: string
                              namespace:
                                description: namespace.
                                type: string
                            required:
                            - kind
                            - name
                            type: object
                          type: array
                      required:
                      - container
                      - filePattern
                      - logPath
                      - namespace
                      type: object
                    type: array
                  containerStdout:
                    description: Container stdout info.
                    items:
                      properties:
                        allContainers:
                          description: Is all containers.
                          type: boolean
                        excludeLabels:
                          description: Pod label to be excluded.
                          items:
                            type: string
                          type: array
                        excludeNamespace:
                          description: Namespaces to be excluded, separated by separators,
                            such as A, B.
                          type: string
                        includeLabels:
                          description: Pod label info.
                          items:
                            type: string
                          type: array
                        namespace:
                          description: Namespace. There can be multiple namespaces,
                            separated by separators, such as A, B.
                          type: string
                        workloads:
                          description: Workload info.
                          items:
                            properties:
                              container:
                                description: container name.
                                type: string
                              kind:
                                description: workload type.
                                type: string
                              name:
                                description: workload name.
                                type: string
                              namespace:
                                description: namespace.
                                type: string
                            required:
                            - kind
                            - name
                            type: object
                          type: array
                      required:
                      - allContainers
                      type: object
                    type: array
                  excludePaths:
                    description: Collection path blocklist.
                    items:
                      properties:
                        type:
                          description: 'Type. Valid values: File, Path.'
                          type: string
                        value:
                          description: Specific content corresponding to Type.
                          type: string
                      type: object
                    type: array
                  extractRule:
                    description: Extraction rule. If ExtractRule is set, LogType must
                      be set.
                    items:
                      properties:
                        backtracking:
                          description: 'Size of the data to be rewound in incremental
                            collection mode. Default value: -1 (full collection).'
                          type: number
                        beginRegex:
                          description: First-Line matching rule, which is valid only
                            if log_type is multiline_log or fullregex_log.
                          type: string
                        delimiter:
                          description: Delimiter for delimited log, which is valid
                            only if log_type is delimiter_log.
                          type: string
                        filterKeyRegex:
                          description: Log keys to be filtered and the corresponding
                            regex.
                          items:
                            properties:
                              key:
                                description: Log key to be filtered.
                                type: string
                              regex:
                                description: Filter rule regex corresponding to key.
                                type: string
                            type: object
                          type: array
                        keys:
                          description: Key name of each extracted field. An empty
                            key indicates to discard the field. This parameter is
                            valid only if log_type is delimiter_log. json_log logs
                            use the key of JSON itself.
                          items:
                            type: string
                          type: array
                        logRegex:
                          description: Full log matching rule, which is valid only
                            if log_type is fullregex_log.
                          type: string
                        timeFormat:
                          description: Time field format. For more information, please
                            see the output parameters of the time format description
                            of the strftime function in C language.
                          type: string
                        timeKey:
                          description: Time field key name. time_key and time_format
                            must appear in pair.
                          type: string
                        unMatchLogKey:
                          description: Unmatched log key.
                          type: string
                        unMatchUpLoadSwitch:
                          description: 'Whether to upload the logs that failed to
                            be parsed. Valid values: true: yes; false: no.'
                          type: boolean
                      type: object
                    type: array
                  groupId:
                    description: Binding group id.
                    type: string
                  groupIds:
                    description: Binding group ids.
                    items:
                      type: string
                    type: array
                  hostFile:
                    description: Node file config info.
                    items:
                      properties:
                        customLabels:
                          description: Metadata info.
                          items:
                            type: string
                          type: array
                        filePattern:
                          description: Log file name.
                          type: string
                        logPath:
                          description: Log file dir.
                          type: string
                      required:
                      - filePattern
                      - logPath
                      type: object
                    type: array
                  logType:
                    description: 'Type of the log to be collected. Valid values: json_log:
                      log in JSON format; delimiter_log: log in delimited format;
                      minimalist_log: minimalist log; multiline_log: log in multi-line
                      format; fullregex_log: log in full regex format. Default value:
                      minimalist_log.'
                    type: string
                  logsetId:
                    description: Logset Id.
                    type: string
                  logsetIdRef:
                    description: A Reference to a named object.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  logsetIdSelector:
                    description: A Selector selects an object.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  logsetName:
                    description: Logset Name.
                    type: string
                  name:
                    description: Collection configuration name.
                    type: string
                  topicId:
                    description: Log topic ID (TopicId) of collection configuration.
                    type: string
                  topicIdRef:
                    description: A Reference to a named object.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  topicIdSelector:
                    description: A Selector selects an object.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  topicName:
                    description: Topic Name.
                    type: string
                  type:
                    description: 'Type. Valid values: container_stdout; container_file;
                      host_file.'
                    type: string
                  userDefineRule:
                    description: Custom collection rule, which is a serialized JSON
                      string.
                    type: string
                required:
                - configFlag
                - logType
                - logsetName
                - name
                - topicName
                - type
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: ConfigExtraStatus defines the observed state of ConfigExtra.
            properties:
              atProvider:
                properties:
                  id:
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
