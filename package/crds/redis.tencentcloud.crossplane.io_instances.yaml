---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: instances.redis.tencentcloud.crossplane.io
spec:
  group: redis.tencentcloud.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - tencentcloudjet
    kind: Instance
    listKind: InstanceList
    plural: instances
    singular: instance
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Instance is the Schema for the Instances API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: InstanceSpec defines the desired state of Instance
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  autoRenewFlag:
                    description: Auto-renew flag. 0 - default state (manual renewal);
                      1 - automatic renewal; 2 - explicit no automatic renewal.
                    type: number
                  availabilityZone:
                    description: The available zone ID of an instance to be created,
                      please refer to `tencentcloud_redis_zone_config.list`.
                    type: string
                  chargeType:
                    description: 'The charge type of instance. Valid values: `PREPAID`
                      and `POSTPAID`. Default value is `POSTPAID`. Note: TencentCloud
                      International only supports `POSTPAID`. Caution that update
                      operation on this field will delete old instances and create
                      new with new charge type.'
                    type: string
                  forceDelete:
                    description: 'Indicate whether to delete Redis instance directly
                      or not. Default is false. If set true, the instance will be
                      deleted instead of staying recycle bin. Note: only works for
                      `PREPAID` instance.'
                    type: boolean
                  memSize:
                    description: The memory volume of an available instance(in MB),
                      please refer to `tencentcloud_redis_zone_config.list[zone].shard_memories`.
                      When redis is standard type, it represents total memory size
                      of the instance; when Redis is cluster type, it represents memory
                      size of per sharding.
                    type: number
                  name:
                    description: Instance name.
                    type: string
                  noAuth:
                    description: 'Indicates whether the redis instance support no-auth
                      access. NOTE: Only available in private cloud environment.'
                    type: boolean
                  paramsTemplateId:
                    description: Specify params template id. If not set, will use
                      default template.
                    type: string
                  passwordSecretRef:
                    description: 'Password for a Redis user, which should be 8 to
                      16 characters. NOTE: Only `no_auth=true` specified can make
                      password empty.'
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  port:
                    description: The port used to access a redis instance. The default
                      value is 6379. And this value can't be changed after creation,
                      or the Redis instance will be recreated.
                    type: number
                  prepaidPeriod:
                    description: 'The tenancy (time unit is month) of the prepaid
                      instance, NOTE: it only works when charge_type is set to `PREPAID`.
                      Valid values are `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`,
                      `10`, `11`, `12`, `24`, `36`.'
                    type: number
                  projectId:
                    description: Specifies which project the instance should belong
                      to.
                    type: number
                  redisReplicasNum:
                    description: The number of instance copies. This is not required
                      for standalone and master slave versions and must equal to count
                      of `replica_zone_ids`.
                    type: number
                  redisShardNum:
                    description: The number of instance shard, default is 1. This
                      is not required for standalone and master slave versions.
                    type: number
                  replicaZoneIds:
                    description: 'ID of replica nodes available zone. This is not
                      required for standalone and master slave versions. NOTE: Removing
                      some of the same zone of replicas (e.g. removing 100001 of [100001,
                      100001, 100002]) will pick the first hit to remove.'
                    items:
                      type: number
                    type: array
                  replicasReadOnly:
                    description: Whether copy read-only is supported, Redis 2.8 Standard
                      Edition and CKV Standard Edition do not support replica read-only,
                      turn on replica read-only, the instance will automatically read
                      and write separate, write requests are routed to the primary
                      node, read requests are routed to the replica node, if you need
                      to open replica read-only, the recommended number of replicas
                      >=2.
                    type: boolean
                  securityGroups:
                    description: ID of security group. If both vpc_id and subnet_id
                      are not set, this argument should not be set either.
                    items:
                      type: string
                    type: array
                  subnetId:
                    description: Specifies which subnet the instance should belong
                      to.
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    description: Instance tags.
                    type: object
                  type:
                    description: 'Instance type. Available values: `cluster_ckv`,`cluster_redis5.0`,`cluster_redis`,`master_slave_ckv`,`master_slave_redis4.0`,`master_slave_redis5.0`,`master_slave_redis`,`standalone_redis`,
                      specific region support specific types, need to refer data `tencentcloud_redis_zone_config`.'
                    type: string
                  typeId:
                    description: Instance type. Available values reference data source
                      `tencentcloud_redis_zone_config` or [document](https://intl.cloud.tencent.com/document/product/239/32069).
                    type: number
                  vpcId:
                    description: ID of the vpc with which the instance is to be associated.
                    type: string
                required:
                - availabilityZone
                - memSize
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: InstanceStatus defines the observed state of Instance.
            properties:
              atProvider:
                properties:
                  createTime:
                    type: string
                  id:
                    type: string
                  ip:
                    type: string
                  nodeInfo:
                    items:
                      properties:
                        id:
                          type: number
                        master:
                          type: boolean
                        zoneId:
                          type: number
                      type: object
                    type: array
                  status:
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
