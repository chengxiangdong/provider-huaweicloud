/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type TopicInitParameters struct {

	// Used to specify the message match policy for the topic. 1: tag match policy (default value); 2: routing match policy.
	// Used to specify the message match policy for the topic. `1`: tag match policy (default value); `2`: routing match policy.
	FilterType *float64 `json:"filterType,omitempty" tf:"filter_type,omitempty"`

	// Maximum message length. Value range: 1024-65536 bytes (i.e., 1-64 KB). Default value: 65536.
	// Maximum message length. Value range: 1024-65536 bytes (i.e., 1-64 KB). Default value: 65536.
	MaxMsgSize *float64 `json:"maxMsgSize,omitempty" tf:"max_msg_size,omitempty"`

	// Message retention period. Value range: 60-86400 seconds (i.e., 1 minute-1 day). Default value: 86400.
	// Message retention period. Value range: 60-86400 seconds (i.e., 1 minute-1 day). Default value: 86400.
	MsgRetentionSeconds *float64 `json:"msgRetentionSeconds,omitempty" tf:"msg_retention_seconds,omitempty"`

	// Topic name, which must be unique in the same topic under the same account in the same region. It can contain up to 64 letters, digits, and hyphens and must begin with a letter.
	// Topic name, which must be unique in the same topic under the same account in the same region. It can contain up to 64 letters, digits, and hyphens and must begin with a letter.
	TopicName *string `json:"topicName,omitempty" tf:"topic_name,omitempty"`

	// Whether to enable message trace. true: yes; false: no. If this field is left empty, the feature will not be enabled.
	// Whether to enable message trace. true: yes; false: no. If this field is left empty, the feature will not be enabled.
	Trace *bool `json:"trace,omitempty" tf:"trace,omitempty"`
}

type TopicObservation struct {

	// Used to specify the message match policy for the topic. 1: tag match policy (default value); 2: routing match policy.
	// Used to specify the message match policy for the topic. `1`: tag match policy (default value); `2`: routing match policy.
	FilterType *float64 `json:"filterType,omitempty" tf:"filter_type,omitempty"`

	// ID of the resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Maximum message length. Value range: 1024-65536 bytes (i.e., 1-64 KB). Default value: 65536.
	// Maximum message length. Value range: 1024-65536 bytes (i.e., 1-64 KB). Default value: 65536.
	MaxMsgSize *float64 `json:"maxMsgSize,omitempty" tf:"max_msg_size,omitempty"`

	// Message retention period. Value range: 60-86400 seconds (i.e., 1 minute-1 day). Default value: 86400.
	// Message retention period. Value range: 60-86400 seconds (i.e., 1 minute-1 day). Default value: 86400.
	MsgRetentionSeconds *float64 `json:"msgRetentionSeconds,omitempty" tf:"msg_retention_seconds,omitempty"`

	// Topic name, which must be unique in the same topic under the same account in the same region. It can contain up to 64 letters, digits, and hyphens and must begin with a letter.
	// Topic name, which must be unique in the same topic under the same account in the same region. It can contain up to 64 letters, digits, and hyphens and must begin with a letter.
	TopicName *string `json:"topicName,omitempty" tf:"topic_name,omitempty"`

	// Whether to enable message trace. true: yes; false: no. If this field is left empty, the feature will not be enabled.
	// Whether to enable message trace. true: yes; false: no. If this field is left empty, the feature will not be enabled.
	Trace *bool `json:"trace,omitempty" tf:"trace,omitempty"`
}

type TopicParameters struct {

	// Used to specify the message match policy for the topic. 1: tag match policy (default value); 2: routing match policy.
	// Used to specify the message match policy for the topic. `1`: tag match policy (default value); `2`: routing match policy.
	// +kubebuilder:validation:Optional
	FilterType *float64 `json:"filterType,omitempty" tf:"filter_type,omitempty"`

	// Maximum message length. Value range: 1024-65536 bytes (i.e., 1-64 KB). Default value: 65536.
	// Maximum message length. Value range: 1024-65536 bytes (i.e., 1-64 KB). Default value: 65536.
	// +kubebuilder:validation:Optional
	MaxMsgSize *float64 `json:"maxMsgSize,omitempty" tf:"max_msg_size,omitempty"`

	// Message retention period. Value range: 60-86400 seconds (i.e., 1 minute-1 day). Default value: 86400.
	// Message retention period. Value range: 60-86400 seconds (i.e., 1 minute-1 day). Default value: 86400.
	// +kubebuilder:validation:Optional
	MsgRetentionSeconds *float64 `json:"msgRetentionSeconds,omitempty" tf:"msg_retention_seconds,omitempty"`

	// Topic name, which must be unique in the same topic under the same account in the same region. It can contain up to 64 letters, digits, and hyphens and must begin with a letter.
	// Topic name, which must be unique in the same topic under the same account in the same region. It can contain up to 64 letters, digits, and hyphens and must begin with a letter.
	// +kubebuilder:validation:Optional
	TopicName *string `json:"topicName,omitempty" tf:"topic_name,omitempty"`

	// Whether to enable message trace. true: yes; false: no. If this field is left empty, the feature will not be enabled.
	// Whether to enable message trace. true: yes; false: no. If this field is left empty, the feature will not be enabled.
	// +kubebuilder:validation:Optional
	Trace *bool `json:"trace,omitempty" tf:"trace,omitempty"`
}

// TopicSpec defines the desired state of Topic
type TopicSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     TopicParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider TopicInitParameters `json:"initProvider,omitempty"`
}

// TopicStatus defines the observed state of Topic.
type TopicStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        TopicObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Topic is the Schema for the Topics API. Provides a resource to create a tcmq topic
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,tencentcloud}
type Topic struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.topicName) || (has(self.initProvider) && has(self.initProvider.topicName))",message="spec.forProvider.topicName is a required parameter"
	Spec   TopicSpec   `json:"spec"`
	Status TopicStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// TopicList contains a list of Topics
type TopicList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Topic `json:"items"`
}

// Repository type metadata.
var (
	Topic_Kind             = "Topic"
	Topic_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Topic_Kind}.String()
	Topic_KindAPIVersion   = Topic_Kind + "." + CRDGroupVersion.String()
	Topic_GroupVersionKind = CRDGroupVersion.WithKind(Topic_Kind)
)

func init() {
	SchemeBuilder.Register(&Topic{}, &TopicList{})
}
