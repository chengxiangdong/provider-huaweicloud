//go:build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Queue) DeepCopyInto(out *Queue) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Queue.
func (in *Queue) DeepCopy() *Queue {
	if in == nil {
		return nil
	}
	out := new(Queue)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Queue) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueueInitParameters) DeepCopyInto(out *QueueInitParameters) {
	*out = *in
	if in.DeadLetterQueueName != nil {
		in, out := &in.DeadLetterQueueName, &out.DeadLetterQueueName
		*out = new(string)
		**out = **in
	}
	if in.FirstQueryInterval != nil {
		in, out := &in.FirstQueryInterval, &out.FirstQueryInterval
		*out = new(float64)
		**out = **in
	}
	if in.MaxMsgHeapNum != nil {
		in, out := &in.MaxMsgHeapNum, &out.MaxMsgHeapNum
		*out = new(float64)
		**out = **in
	}
	if in.MaxMsgSize != nil {
		in, out := &in.MaxMsgSize, &out.MaxMsgSize
		*out = new(float64)
		**out = **in
	}
	if in.MaxQueryCount != nil {
		in, out := &in.MaxQueryCount, &out.MaxQueryCount
		*out = new(float64)
		**out = **in
	}
	if in.MaxReceiveCount != nil {
		in, out := &in.MaxReceiveCount, &out.MaxReceiveCount
		*out = new(float64)
		**out = **in
	}
	if in.MaxTimeToLive != nil {
		in, out := &in.MaxTimeToLive, &out.MaxTimeToLive
		*out = new(float64)
		**out = **in
	}
	if in.MsgRetentionSeconds != nil {
		in, out := &in.MsgRetentionSeconds, &out.MsgRetentionSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = new(float64)
		**out = **in
	}
	if in.PollingWaitSeconds != nil {
		in, out := &in.PollingWaitSeconds, &out.PollingWaitSeconds
		*out = new(float64)
		**out = **in
	}
	if in.QueueName != nil {
		in, out := &in.QueueName, &out.QueueName
		*out = new(string)
		**out = **in
	}
	if in.RetentionSizeInMb != nil {
		in, out := &in.RetentionSizeInMb, &out.RetentionSizeInMb
		*out = new(float64)
		**out = **in
	}
	if in.RewindSeconds != nil {
		in, out := &in.RewindSeconds, &out.RewindSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Trace != nil {
		in, out := &in.Trace, &out.Trace
		*out = new(bool)
		**out = **in
	}
	if in.Transaction != nil {
		in, out := &in.Transaction, &out.Transaction
		*out = new(float64)
		**out = **in
	}
	if in.VisibilityTimeout != nil {
		in, out := &in.VisibilityTimeout, &out.VisibilityTimeout
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueueInitParameters.
func (in *QueueInitParameters) DeepCopy() *QueueInitParameters {
	if in == nil {
		return nil
	}
	out := new(QueueInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueueList) DeepCopyInto(out *QueueList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Queue, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueueList.
func (in *QueueList) DeepCopy() *QueueList {
	if in == nil {
		return nil
	}
	out := new(QueueList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *QueueList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueueObservation) DeepCopyInto(out *QueueObservation) {
	*out = *in
	if in.DeadLetterQueueName != nil {
		in, out := &in.DeadLetterQueueName, &out.DeadLetterQueueName
		*out = new(string)
		**out = **in
	}
	if in.FirstQueryInterval != nil {
		in, out := &in.FirstQueryInterval, &out.FirstQueryInterval
		*out = new(float64)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.MaxMsgHeapNum != nil {
		in, out := &in.MaxMsgHeapNum, &out.MaxMsgHeapNum
		*out = new(float64)
		**out = **in
	}
	if in.MaxMsgSize != nil {
		in, out := &in.MaxMsgSize, &out.MaxMsgSize
		*out = new(float64)
		**out = **in
	}
	if in.MaxQueryCount != nil {
		in, out := &in.MaxQueryCount, &out.MaxQueryCount
		*out = new(float64)
		**out = **in
	}
	if in.MaxReceiveCount != nil {
		in, out := &in.MaxReceiveCount, &out.MaxReceiveCount
		*out = new(float64)
		**out = **in
	}
	if in.MaxTimeToLive != nil {
		in, out := &in.MaxTimeToLive, &out.MaxTimeToLive
		*out = new(float64)
		**out = **in
	}
	if in.MsgRetentionSeconds != nil {
		in, out := &in.MsgRetentionSeconds, &out.MsgRetentionSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = new(float64)
		**out = **in
	}
	if in.PollingWaitSeconds != nil {
		in, out := &in.PollingWaitSeconds, &out.PollingWaitSeconds
		*out = new(float64)
		**out = **in
	}
	if in.QueueName != nil {
		in, out := &in.QueueName, &out.QueueName
		*out = new(string)
		**out = **in
	}
	if in.RetentionSizeInMb != nil {
		in, out := &in.RetentionSizeInMb, &out.RetentionSizeInMb
		*out = new(float64)
		**out = **in
	}
	if in.RewindSeconds != nil {
		in, out := &in.RewindSeconds, &out.RewindSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Trace != nil {
		in, out := &in.Trace, &out.Trace
		*out = new(bool)
		**out = **in
	}
	if in.Transaction != nil {
		in, out := &in.Transaction, &out.Transaction
		*out = new(float64)
		**out = **in
	}
	if in.VisibilityTimeout != nil {
		in, out := &in.VisibilityTimeout, &out.VisibilityTimeout
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueueObservation.
func (in *QueueObservation) DeepCopy() *QueueObservation {
	if in == nil {
		return nil
	}
	out := new(QueueObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueueParameters) DeepCopyInto(out *QueueParameters) {
	*out = *in
	if in.DeadLetterQueueName != nil {
		in, out := &in.DeadLetterQueueName, &out.DeadLetterQueueName
		*out = new(string)
		**out = **in
	}
	if in.FirstQueryInterval != nil {
		in, out := &in.FirstQueryInterval, &out.FirstQueryInterval
		*out = new(float64)
		**out = **in
	}
	if in.MaxMsgHeapNum != nil {
		in, out := &in.MaxMsgHeapNum, &out.MaxMsgHeapNum
		*out = new(float64)
		**out = **in
	}
	if in.MaxMsgSize != nil {
		in, out := &in.MaxMsgSize, &out.MaxMsgSize
		*out = new(float64)
		**out = **in
	}
	if in.MaxQueryCount != nil {
		in, out := &in.MaxQueryCount, &out.MaxQueryCount
		*out = new(float64)
		**out = **in
	}
	if in.MaxReceiveCount != nil {
		in, out := &in.MaxReceiveCount, &out.MaxReceiveCount
		*out = new(float64)
		**out = **in
	}
	if in.MaxTimeToLive != nil {
		in, out := &in.MaxTimeToLive, &out.MaxTimeToLive
		*out = new(float64)
		**out = **in
	}
	if in.MsgRetentionSeconds != nil {
		in, out := &in.MsgRetentionSeconds, &out.MsgRetentionSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = new(float64)
		**out = **in
	}
	if in.PollingWaitSeconds != nil {
		in, out := &in.PollingWaitSeconds, &out.PollingWaitSeconds
		*out = new(float64)
		**out = **in
	}
	if in.QueueName != nil {
		in, out := &in.QueueName, &out.QueueName
		*out = new(string)
		**out = **in
	}
	if in.RetentionSizeInMb != nil {
		in, out := &in.RetentionSizeInMb, &out.RetentionSizeInMb
		*out = new(float64)
		**out = **in
	}
	if in.RewindSeconds != nil {
		in, out := &in.RewindSeconds, &out.RewindSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Trace != nil {
		in, out := &in.Trace, &out.Trace
		*out = new(bool)
		**out = **in
	}
	if in.Transaction != nil {
		in, out := &in.Transaction, &out.Transaction
		*out = new(float64)
		**out = **in
	}
	if in.VisibilityTimeout != nil {
		in, out := &in.VisibilityTimeout, &out.VisibilityTimeout
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueueParameters.
func (in *QueueParameters) DeepCopy() *QueueParameters {
	if in == nil {
		return nil
	}
	out := new(QueueParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueueSpec) DeepCopyInto(out *QueueSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueueSpec.
func (in *QueueSpec) DeepCopy() *QueueSpec {
	if in == nil {
		return nil
	}
	out := new(QueueSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueueStatus) DeepCopyInto(out *QueueStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueueStatus.
func (in *QueueStatus) DeepCopy() *QueueStatus {
	if in == nil {
		return nil
	}
	out := new(QueueStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Subscribe) DeepCopyInto(out *Subscribe) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Subscribe.
func (in *Subscribe) DeepCopy() *Subscribe {
	if in == nil {
		return nil
	}
	out := new(Subscribe)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Subscribe) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscribeInitParameters) DeepCopyInto(out *SubscribeInitParameters) {
	*out = *in
	if in.BindingKey != nil {
		in, out := &in.BindingKey, &out.BindingKey
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.EndpointRef != nil {
		in, out := &in.EndpointRef, &out.EndpointRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.EndpointSelector != nil {
		in, out := &in.EndpointSelector, &out.EndpointSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.FilterTags != nil {
		in, out := &in.FilterTags, &out.FilterTags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NotifyContentFormat != nil {
		in, out := &in.NotifyContentFormat, &out.NotifyContentFormat
		*out = new(string)
		**out = **in
	}
	if in.NotifyStrategy != nil {
		in, out := &in.NotifyStrategy, &out.NotifyStrategy
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.SubscriptionName != nil {
		in, out := &in.SubscriptionName, &out.SubscriptionName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TopicName != nil {
		in, out := &in.TopicName, &out.TopicName
		*out = new(string)
		**out = **in
	}
	if in.TopicNameRef != nil {
		in, out := &in.TopicNameRef, &out.TopicNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TopicNameSelector != nil {
		in, out := &in.TopicNameSelector, &out.TopicNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscribeInitParameters.
func (in *SubscribeInitParameters) DeepCopy() *SubscribeInitParameters {
	if in == nil {
		return nil
	}
	out := new(SubscribeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscribeList) DeepCopyInto(out *SubscribeList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Subscribe, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscribeList.
func (in *SubscribeList) DeepCopy() *SubscribeList {
	if in == nil {
		return nil
	}
	out := new(SubscribeList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SubscribeList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscribeObservation) DeepCopyInto(out *SubscribeObservation) {
	*out = *in
	if in.BindingKey != nil {
		in, out := &in.BindingKey, &out.BindingKey
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.FilterTags != nil {
		in, out := &in.FilterTags, &out.FilterTags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.NotifyContentFormat != nil {
		in, out := &in.NotifyContentFormat, &out.NotifyContentFormat
		*out = new(string)
		**out = **in
	}
	if in.NotifyStrategy != nil {
		in, out := &in.NotifyStrategy, &out.NotifyStrategy
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.SubscriptionName != nil {
		in, out := &in.SubscriptionName, &out.SubscriptionName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TopicName != nil {
		in, out := &in.TopicName, &out.TopicName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscribeObservation.
func (in *SubscribeObservation) DeepCopy() *SubscribeObservation {
	if in == nil {
		return nil
	}
	out := new(SubscribeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscribeParameters) DeepCopyInto(out *SubscribeParameters) {
	*out = *in
	if in.BindingKey != nil {
		in, out := &in.BindingKey, &out.BindingKey
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.EndpointRef != nil {
		in, out := &in.EndpointRef, &out.EndpointRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.EndpointSelector != nil {
		in, out := &in.EndpointSelector, &out.EndpointSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.FilterTags != nil {
		in, out := &in.FilterTags, &out.FilterTags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NotifyContentFormat != nil {
		in, out := &in.NotifyContentFormat, &out.NotifyContentFormat
		*out = new(string)
		**out = **in
	}
	if in.NotifyStrategy != nil {
		in, out := &in.NotifyStrategy, &out.NotifyStrategy
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.SubscriptionName != nil {
		in, out := &in.SubscriptionName, &out.SubscriptionName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TopicName != nil {
		in, out := &in.TopicName, &out.TopicName
		*out = new(string)
		**out = **in
	}
	if in.TopicNameRef != nil {
		in, out := &in.TopicNameRef, &out.TopicNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TopicNameSelector != nil {
		in, out := &in.TopicNameSelector, &out.TopicNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscribeParameters.
func (in *SubscribeParameters) DeepCopy() *SubscribeParameters {
	if in == nil {
		return nil
	}
	out := new(SubscribeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscribeSpec) DeepCopyInto(out *SubscribeSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscribeSpec.
func (in *SubscribeSpec) DeepCopy() *SubscribeSpec {
	if in == nil {
		return nil
	}
	out := new(SubscribeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscribeStatus) DeepCopyInto(out *SubscribeStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscribeStatus.
func (in *SubscribeStatus) DeepCopy() *SubscribeStatus {
	if in == nil {
		return nil
	}
	out := new(SubscribeStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Topic) DeepCopyInto(out *Topic) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Topic.
func (in *Topic) DeepCopy() *Topic {
	if in == nil {
		return nil
	}
	out := new(Topic)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Topic) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicInitParameters) DeepCopyInto(out *TopicInitParameters) {
	*out = *in
	if in.FilterType != nil {
		in, out := &in.FilterType, &out.FilterType
		*out = new(float64)
		**out = **in
	}
	if in.MaxMsgSize != nil {
		in, out := &in.MaxMsgSize, &out.MaxMsgSize
		*out = new(float64)
		**out = **in
	}
	if in.MsgRetentionSeconds != nil {
		in, out := &in.MsgRetentionSeconds, &out.MsgRetentionSeconds
		*out = new(float64)
		**out = **in
	}
	if in.TopicName != nil {
		in, out := &in.TopicName, &out.TopicName
		*out = new(string)
		**out = **in
	}
	if in.Trace != nil {
		in, out := &in.Trace, &out.Trace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicInitParameters.
func (in *TopicInitParameters) DeepCopy() *TopicInitParameters {
	if in == nil {
		return nil
	}
	out := new(TopicInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicList) DeepCopyInto(out *TopicList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Topic, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicList.
func (in *TopicList) DeepCopy() *TopicList {
	if in == nil {
		return nil
	}
	out := new(TopicList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TopicList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicObservation) DeepCopyInto(out *TopicObservation) {
	*out = *in
	if in.FilterType != nil {
		in, out := &in.FilterType, &out.FilterType
		*out = new(float64)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.MaxMsgSize != nil {
		in, out := &in.MaxMsgSize, &out.MaxMsgSize
		*out = new(float64)
		**out = **in
	}
	if in.MsgRetentionSeconds != nil {
		in, out := &in.MsgRetentionSeconds, &out.MsgRetentionSeconds
		*out = new(float64)
		**out = **in
	}
	if in.TopicName != nil {
		in, out := &in.TopicName, &out.TopicName
		*out = new(string)
		**out = **in
	}
	if in.Trace != nil {
		in, out := &in.Trace, &out.Trace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicObservation.
func (in *TopicObservation) DeepCopy() *TopicObservation {
	if in == nil {
		return nil
	}
	out := new(TopicObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicParameters) DeepCopyInto(out *TopicParameters) {
	*out = *in
	if in.FilterType != nil {
		in, out := &in.FilterType, &out.FilterType
		*out = new(float64)
		**out = **in
	}
	if in.MaxMsgSize != nil {
		in, out := &in.MaxMsgSize, &out.MaxMsgSize
		*out = new(float64)
		**out = **in
	}
	if in.MsgRetentionSeconds != nil {
		in, out := &in.MsgRetentionSeconds, &out.MsgRetentionSeconds
		*out = new(float64)
		**out = **in
	}
	if in.TopicName != nil {
		in, out := &in.TopicName, &out.TopicName
		*out = new(string)
		**out = **in
	}
	if in.Trace != nil {
		in, out := &in.Trace, &out.Trace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicParameters.
func (in *TopicParameters) DeepCopy() *TopicParameters {
	if in == nil {
		return nil
	}
	out := new(TopicParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicSpec) DeepCopyInto(out *TopicSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicSpec.
func (in *TopicSpec) DeepCopy() *TopicSpec {
	if in == nil {
		return nil
	}
	out := new(TopicSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicStatus) DeepCopyInto(out *TopicStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicStatus.
func (in *TopicStatus) DeepCopy() *TopicStatus {
	if in == nil {
		return nil
	}
	out := new(TopicStatus)
	in.DeepCopyInto(out)
	return out
}
