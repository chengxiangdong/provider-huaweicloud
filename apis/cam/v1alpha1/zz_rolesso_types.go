/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type RoleSSOObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type RoleSSOParameters struct {

	// Client ids.
	// +kubebuilder:validation:Required
	ClientIds []*string `json:"clientIds" tf:"client_ids,omitempty"`

	// The description of resource.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Sign the public key.
	// +kubebuilder:validation:Required
	IdentityKey *string `json:"identityKey" tf:"identity_key,omitempty"`

	// Identity provider URL.
	// +kubebuilder:validation:Required
	IdentityURL *string `json:"identityUrl" tf:"identity_url,omitempty"`

	// The name of resource.
	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

// RoleSSOSpec defines the desired state of RoleSSO
type RoleSSOSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     RoleSSOParameters `json:"forProvider"`
}

// RoleSSOStatus defines the observed state of RoleSSO.
type RoleSSOStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        RoleSSOObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// RoleSSO is the Schema for the RoleSSOs API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,tencentcloudjet}
type RoleSSO struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              RoleSSOSpec   `json:"spec"`
	Status            RoleSSOStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// RoleSSOList contains a list of RoleSSOs
type RoleSSOList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []RoleSSO `json:"items"`
}

// Repository type metadata.
var (
	RoleSSO_Kind             = "RoleSSO"
	RoleSSO_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: RoleSSO_Kind}.String()
	RoleSSO_KindAPIVersion   = RoleSSO_Kind + "." + CRDGroupVersion.String()
	RoleSSO_GroupVersionKind = CRDGroupVersion.WithKind(RoleSSO_Kind)
)

func init() {
	SchemeBuilder.Register(&RoleSSO{}, &RoleSSOList{})
}
