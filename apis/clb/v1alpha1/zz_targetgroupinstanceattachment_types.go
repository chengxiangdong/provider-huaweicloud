/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type TargetGroupInstanceAttachmentObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type TargetGroupInstanceAttachmentParameters struct {

	// The Intranet IP of the target group instance.
	// +kubebuilder:validation:Required
	BindIP *string `json:"bindIp" tf:"bind_ip,omitempty"`

	// Port of the target group instance.
	// +kubebuilder:validation:Required
	Port *float64 `json:"port" tf:"port,omitempty"`

	// Target group ID.
	// +crossplane:generate:reference:type=TargetGroup
	// +kubebuilder:validation:Optional
	TargetGroupID *string `json:"targetGroupId,omitempty" tf:"target_group_id,omitempty"`

	// +kubebuilder:validation:Optional
	TargetGroupIDRef *v1.Reference `json:"targetGroupIdRef,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	TargetGroupIDSelector *v1.Selector `json:"targetGroupIdSelector,omitempty" tf:"-"`

	// The weight of the target group instance.
	// +kubebuilder:validation:Required
	Weight *float64 `json:"weight" tf:"weight,omitempty"`
}

// TargetGroupInstanceAttachmentSpec defines the desired state of TargetGroupInstanceAttachment
type TargetGroupInstanceAttachmentSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     TargetGroupInstanceAttachmentParameters `json:"forProvider"`
}

// TargetGroupInstanceAttachmentStatus defines the observed state of TargetGroupInstanceAttachment.
type TargetGroupInstanceAttachmentStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        TargetGroupInstanceAttachmentObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// TargetGroupInstanceAttachment is the Schema for the TargetGroupInstanceAttachments API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,tencentcloudjet}
type TargetGroupInstanceAttachment struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              TargetGroupInstanceAttachmentSpec   `json:"spec"`
	Status            TargetGroupInstanceAttachmentStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// TargetGroupInstanceAttachmentList contains a list of TargetGroupInstanceAttachments
type TargetGroupInstanceAttachmentList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []TargetGroupInstanceAttachment `json:"items"`
}

// Repository type metadata.
var (
	TargetGroupInstanceAttachment_Kind             = "TargetGroupInstanceAttachment"
	TargetGroupInstanceAttachment_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: TargetGroupInstanceAttachment_Kind}.String()
	TargetGroupInstanceAttachment_KindAPIVersion   = TargetGroupInstanceAttachment_Kind + "." + CRDGroupVersion.String()
	TargetGroupInstanceAttachment_GroupVersionKind = CRDGroupVersion.WithKind(TargetGroupInstanceAttachment_Kind)
)

func init() {
	SchemeBuilder.Register(&TargetGroupInstanceAttachment{}, &TargetGroupInstanceAttachmentList{})
}
