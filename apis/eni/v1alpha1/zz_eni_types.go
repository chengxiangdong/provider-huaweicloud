/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type EniObservation struct {
	CreateTime *string `json:"createTime,omitempty" tf:"create_time,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	IPv4Info []IPv4InfoObservation `json:"ipv4Info,omitempty" tf:"ipv4_info,omitempty"`

	Mac *string `json:"mac,omitempty" tf:"mac,omitempty"`

	Primary *bool `json:"primary,omitempty" tf:"primary,omitempty"`

	State *string `json:"state,omitempty" tf:"state,omitempty"`
}

type EniParameters struct {

	// Description of the ENI, maximum length 60.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The number of intranet IPv4s. When it is greater than 1, there is only one primary intranet IP. The others are auxiliary intranet IPs, which conflict with `ipv4s`.
	// +kubebuilder:validation:Optional
	IPv4Count *float64 `json:"ipv4Count,omitempty" tf:"ipv4_count,omitempty"`

	// Applying for intranet IPv4s collection, conflict with `ipv4_count`. When there are multiple ipv4s, can only be one primary IP, and the maximum length of the array is 30. Each element contains the following attributes:
	// +kubebuilder:validation:Optional
	Ipv4S []Ipv4SParameters `json:"ipv4s,omitempty" tf:"ipv4s,omitempty"`

	// Name of the ENI, maximum length 60.
	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// A set of security group IDs.
	// +kubebuilder:validation:Optional
	SecurityGroups []*string `json:"securityGroups,omitempty" tf:"security_groups,omitempty"`

	// ID of the subnet within this vpc.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-tencentcloud/apis/vpc/v1alpha1.Subnet
	// +kubebuilder:validation:Optional
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// +kubebuilder:validation:Optional
	SubnetIDRef *v1.Reference `json:"subnetIdRef,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	SubnetIDSelector *v1.Selector `json:"subnetIdSelector,omitempty" tf:"-"`

	// Tags of the ENI.
	// +kubebuilder:validation:Optional
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// ID of the vpc.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-tencentcloud/apis/vpc/v1alpha1.VPC
	// +kubebuilder:validation:Optional
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// +kubebuilder:validation:Optional
	VPCIDRef *v1.Reference `json:"vpcidRef,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	VPCIDSelector *v1.Selector `json:"vpcidSelector,omitempty" tf:"-"`
}

type IPv4InfoObservation struct {
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	IP *string `json:"ip,omitempty" tf:"ip,omitempty"`

	Primary *bool `json:"primary,omitempty" tf:"primary,omitempty"`
}

type IPv4InfoParameters struct {
}

type Ipv4SObservation struct {
}

type Ipv4SParameters struct {

	// Description of the IP, maximum length 25.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Intranet IP.
	// +kubebuilder:validation:Required
	IP *string `json:"ip" tf:"ip,omitempty"`

	// Indicates whether the IP is primary.
	// +kubebuilder:validation:Required
	Primary *bool `json:"primary" tf:"primary,omitempty"`
}

// EniSpec defines the desired state of Eni
type EniSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     EniParameters `json:"forProvider"`
}

// EniStatus defines the observed state of Eni.
type EniStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        EniObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// Eni is the Schema for the Enis API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,tencentcloudjet}
type Eni struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              EniSpec   `json:"spec"`
	Status            EniStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// EniList contains a list of Enis
type EniList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Eni `json:"items"`
}

// Repository type metadata.
var (
	Eni_Kind             = "Eni"
	Eni_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Eni_Kind}.String()
	Eni_KindAPIVersion   = Eni_Kind + "." + CRDGroupVersion.String()
	Eni_GroupVersionKind = CRDGroupVersion.WithKind(Eni_Kind)
)

func init() {
	SchemeBuilder.Register(&Eni{}, &EniList{})
}
