/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type VpcAttachmentObservation struct {
	AccessIP *string `json:"accessIp,omitempty" tf:"access_ip,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	Status *string `json:"status,omitempty" tf:"status,omitempty"`
}

type VpcAttachmentParameters struct {

	// Whether to enable public domain dns. Default value is `false`.
	// +kubebuilder:validation:Optional
	EnablePublicDomainDNS *bool `json:"enablePublicDomainDns,omitempty" tf:"enable_public_domain_dns,omitempty"`

	// Whether to enable vpc domain dns. Default value is `false`.
	// +kubebuilder:validation:Optional
	EnableVPCDomainDNS *bool `json:"enableVpcDomainDns,omitempty" tf:"enable_vpc_domain_dns,omitempty"`

	// ID of the TCR instance.
	// +crossplane:generate:reference:type=Instance
	// +kubebuilder:validation:Optional
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// +kubebuilder:validation:Optional
	InstanceIDRef *v1.Reference `json:"instanceIdRef,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	InstanceIDSelector *v1.Selector `json:"instanceIdSelector,omitempty" tf:"-"`

	// ID of region. Conflict with region_name, can not be set at the same time.
	// +kubebuilder:validation:Optional
	RegionID *float64 `json:"regionId,omitempty" tf:"region_id,omitempty"`

	// Name of region. Conflict with region_id, can not be set at the same time.
	// +kubebuilder:validation:Optional
	RegionName *string `json:"regionName,omitempty" tf:"region_name,omitempty"`

	// ID of subnet.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-tencentcloud/apis/vpc/v1alpha1.Subnet
	// +kubebuilder:validation:Optional
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// +kubebuilder:validation:Optional
	SubnetIDRef *v1.Reference `json:"subnetIdRef,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	SubnetIDSelector *v1.Selector `json:"subnetIdSelector,omitempty" tf:"-"`

	// ID of VPC.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-tencentcloud/apis/vpc/v1alpha1.VPC
	// +kubebuilder:validation:Optional
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// +kubebuilder:validation:Optional
	VPCIDRef *v1.Reference `json:"vpcidRef,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	VPCIDSelector *v1.Selector `json:"vpcidSelector,omitempty" tf:"-"`
}

// VpcAttachmentSpec defines the desired state of VpcAttachment
type VpcAttachmentSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     VpcAttachmentParameters `json:"forProvider"`
}

// VpcAttachmentStatus defines the observed state of VpcAttachment.
type VpcAttachmentStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        VpcAttachmentObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// VpcAttachment is the Schema for the VpcAttachments API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,tencentcloudjet}
type VpcAttachment struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              VpcAttachmentSpec   `json:"spec"`
	Status            VpcAttachmentStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// VpcAttachmentList contains a list of VpcAttachments
type VpcAttachmentList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []VpcAttachment `json:"items"`
}

// Repository type metadata.
var (
	VpcAttachment_Kind             = "VpcAttachment"
	VpcAttachment_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: VpcAttachment_Kind}.String()
	VpcAttachment_KindAPIVersion   = VpcAttachment_Kind + "." + CRDGroupVersion.String()
	VpcAttachment_GroupVersionKind = CRDGroupVersion.WithKind(VpcAttachment_Kind)
)

func init() {
	SchemeBuilder.Register(&VpcAttachment{}, &VpcAttachmentList{})
}
