/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ReadonlyInstanceObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	IntranetIP *string `json:"intranetIp,omitempty" tf:"intranet_ip,omitempty"`

	Locked *float64 `json:"locked,omitempty" tf:"locked,omitempty"`

	Status *float64 `json:"status,omitempty" tf:"status,omitempty"`

	TaskStatus *float64 `json:"taskStatus,omitempty" tf:"task_status,omitempty"`
}

type ReadonlyInstanceParameters struct {

	// Auto renew flag. NOTES: Only supported prepaid instance.
	// +kubebuilder:validation:Optional
	AutoRenewFlag *float64 `json:"autoRenewFlag,omitempty" tf:"auto_renew_flag,omitempty"`

	// CPU cores.
	// +kubebuilder:validation:Optional
	CPU *float64 `json:"cpu,omitempty" tf:"cpu,omitempty"`

	// Pay type of instance. Valid values:`PREPAID`, `POSTPAID`. Default is `POSTPAID`.
	// +kubebuilder:validation:Optional
	ChargeType *string `json:"chargeType,omitempty" tf:"charge_type,omitempty"`

	// Specify device type, available values: `UNIVERSAL` (default), `EXCLUSIVE`, `BASIC`.
	// +kubebuilder:validation:Optional
	DeviceType *string `json:"deviceType,omitempty" tf:"device_type,omitempty"`

	// Specify whether to enable fast upgrade when upgrade instance spec, available value: `1` - enabled, `0` - disabled.
	// +kubebuilder:validation:Optional
	FastUpgrade *float64 `json:"fastUpgrade,omitempty" tf:"fast_upgrade,omitempty"`

	// Indicate whether to delete instance directly or not. Default is `false`. If set true, the instance will be deleted instead of staying recycle bin. Note: only works for `PREPAID` instance. When the main mysql instance set true, this para of the readonly mysql instance will not take effect.
	// +kubebuilder:validation:Optional
	ForceDelete *bool `json:"forceDelete,omitempty" tf:"force_delete,omitempty"`

	// The name of a mysql instance.
	// +kubebuilder:validation:Required
	InstanceName *string `json:"instanceName" tf:"instance_name,omitempty"`

	// Public access port. Valid value ranges: [1024~65535]. The default value is `3306`.
	// +kubebuilder:validation:Optional
	IntranetPort *float64 `json:"intranetPort,omitempty" tf:"intranet_port,omitempty"`

	// Indicates the master instance ID of recovery instances.
	// +crossplane:generate:reference:type=Instance
	// +kubebuilder:validation:Optional
	MasterInstanceID *string `json:"masterInstanceId,omitempty" tf:"master_instance_id,omitempty"`

	// +kubebuilder:validation:Optional
	MasterInstanceIDRef *v1.Reference `json:"masterInstanceIdRef,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	MasterInstanceIDSelector *v1.Selector `json:"masterInstanceIdSelector,omitempty" tf:"-"`

	// The zone information of the primary instance is required when you purchase a disaster recovery instance.
	// +kubebuilder:validation:Optional
	MasterRegion *string `json:"masterRegion,omitempty" tf:"master_region,omitempty"`

	// Memory size (in MB).
	// +kubebuilder:validation:Required
	MemSize *float64 `json:"memSize" tf:"mem_size,omitempty"`

	// Specify parameter template id.
	// +kubebuilder:validation:Optional
	ParamTemplateID *float64 `json:"paramTemplateId,omitempty" tf:"param_template_id,omitempty"`

	// Pay type of instance. Valid values: `0`, `1`. `0`: prepaid, `1`: postpaid.
	// +kubebuilder:validation:Optional
	PayType *float64 `json:"payType,omitempty" tf:"pay_type,omitempty"`

	// Period of instance. NOTES: Only supported prepaid instance.
	// +kubebuilder:validation:Optional
	Period *float64 `json:"period,omitempty" tf:"period,omitempty"`

	// Period of instance. NOTES: Only supported prepaid instance.
	// +kubebuilder:validation:Optional
	PrepaidPeriod *float64 `json:"prepaidPeriod,omitempty" tf:"prepaid_period,omitempty"`

	// Security groups to use.
	// +kubebuilder:validation:Optional
	SecurityGroups []*string `json:"securityGroups,omitempty" tf:"security_groups,omitempty"`

	// Private network ID. If `vpc_id` is set, this value is required.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-tencentcloud/apis/vpc/v1alpha1.Subnet
	// +kubebuilder:validation:Optional
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// +kubebuilder:validation:Optional
	SubnetIDRef *v1.Reference `json:"subnetIdRef,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	SubnetIDSelector *v1.Selector `json:"subnetIdSelector,omitempty" tf:"-"`

	// Instance tags.
	// +kubebuilder:validation:Optional
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// ID of VPC, which can be modified once every 24 hours and can't be removed.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-tencentcloud/apis/vpc/v1alpha1.VPC
	// +kubebuilder:validation:Optional
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// +kubebuilder:validation:Optional
	VPCIDRef *v1.Reference `json:"vpcidRef,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	VPCIDSelector *v1.Selector `json:"vpcidSelector,omitempty" tf:"-"`

	// Disk size (in GB).
	// +kubebuilder:validation:Required
	VolumeSize *float64 `json:"volumeSize" tf:"volume_size,omitempty"`

	// Zone information, this parameter defaults to, the system automatically selects an Availability Zone.
	// +kubebuilder:validation:Optional
	Zone *string `json:"zone,omitempty" tf:"zone,omitempty"`
}

// ReadonlyInstanceSpec defines the desired state of ReadonlyInstance
type ReadonlyInstanceSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ReadonlyInstanceParameters `json:"forProvider"`
}

// ReadonlyInstanceStatus defines the observed state of ReadonlyInstance.
type ReadonlyInstanceStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ReadonlyInstanceObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// ReadonlyInstance is the Schema for the ReadonlyInstances API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,tencentcloudjet}
type ReadonlyInstance struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ReadonlyInstanceSpec   `json:"spec"`
	Status            ReadonlyInstanceStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ReadonlyInstanceList contains a list of ReadonlyInstances
type ReadonlyInstanceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ReadonlyInstance `json:"items"`
}

// Repository type metadata.
var (
	ReadonlyInstance_Kind             = "ReadonlyInstance"
	ReadonlyInstance_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ReadonlyInstance_Kind}.String()
	ReadonlyInstance_KindAPIVersion   = ReadonlyInstance_Kind + "." + CRDGroupVersion.String()
	ReadonlyInstance_GroupVersionKind = CRDGroupVersion.WithKind(ReadonlyInstance_Kind)
)

func init() {
	SchemeBuilder.Register(&ReadonlyInstance{}, &ReadonlyInstanceList{})
}
