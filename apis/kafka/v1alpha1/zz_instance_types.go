/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ConfigObservation struct {
}

type ConfigParameters struct {

	// Automatic creation. true: enabled, false: not enabled.
	// +kubebuilder:validation:Required
	AutoCreateTopicEnable *bool `json:"autoCreateTopicEnable" tf:"auto_create_topic_enable,omitempty"`

	// If auto.create.topic.enable is set to true and this value is not set, 3 will be used by default.
	// +kubebuilder:validation:Required
	DefaultNumPartitions *float64 `json:"defaultNumPartitions" tf:"default_num_partitions,omitempty"`

	// If auto.create.topic.enable is set to true but this value is not set, 2 will be used by default.
	// +kubebuilder:validation:Required
	DefaultReplicationFactor *float64 `json:"defaultReplicationFactor" tf:"default_replication_factor,omitempty"`
}

type DynamicRetentionConfigObservation struct {
}

type DynamicRetentionConfigParameters struct {

	// Minimum retention time, in minutes.
	// +kubebuilder:validation:Optional
	BottomRetention *float64 `json:"bottomRetention,omitempty" tf:"bottom_retention,omitempty"`

	// Disk quota threshold (in percentage) for triggering the message retention time change event.
	// +kubebuilder:validation:Optional
	DiskQuotaPercentage *float64 `json:"diskQuotaPercentage,omitempty" tf:"disk_quota_percentage,omitempty"`

	// Whether the dynamic message retention time configuration is enabled. 0: disabled; 1: enabled.
	// +kubebuilder:validation:Optional
	Enable *float64 `json:"enable,omitempty" tf:"enable,omitempty"`

	// Percentage by which the message retention time is shortened each time.
	// +kubebuilder:validation:Optional
	StepForwardPercentage *float64 `json:"stepForwardPercentage,omitempty" tf:"step_forward_percentage,omitempty"`
}

type InstanceObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	Vip *string `json:"vip,omitempty" tf:"vip,omitempty"`

	Vport *string `json:"vport,omitempty" tf:"vport,omitempty"`
}

type InstanceParameters struct {

	// Instance bandwidth in MBps.
	// +kubebuilder:validation:Optional
	BandWidth *float64 `json:"bandWidth,omitempty" tf:"band_width,omitempty"`

	// Instance configuration.
	// +kubebuilder:validation:Optional
	Config []ConfigParameters `json:"config,omitempty" tf:"config,omitempty"`

	// Disk Size. Its interval varies with bandwidth, and the input must be within the interval, which can be viewed through the control. If it is not within the interval, the plan will cause a change when first created.
	// +kubebuilder:validation:Optional
	DiskSize *float64 `json:"diskSize,omitempty" tf:"disk_size,omitempty"`

	// Type of disk.
	// +kubebuilder:validation:Optional
	DiskType *string `json:"diskType,omitempty" tf:"disk_type,omitempty"`

	// Dynamic message retention policy configuration.
	// +kubebuilder:validation:Optional
	DynamicRetentionConfig []DynamicRetentionConfigParameters `json:"dynamicRetentionConfig,omitempty" tf:"dynamic_retention_config,omitempty"`

	// Instance name.
	// +kubebuilder:validation:Required
	InstanceName *string `json:"instanceName" tf:"instance_name,omitempty"`

	// Kafka version (0.10.2/1.1.1/2.4.1).
	// +kubebuilder:validation:Optional
	KafkaVersion *string `json:"kafkaVersion,omitempty" tf:"kafka_version,omitempty"`

	// The maximum retention time of instance logs, in minutes. the default is 10080 (7 days), the maximum is 30 days, and the default 0 is not filled, which means that the log retention time recovery policy is not enabled.
	// +kubebuilder:validation:Optional
	MsgRetentionTime *float64 `json:"msgRetentionTime,omitempty" tf:"msg_retention_time,omitempty"`

	// Indicates whether the instance is multi zones. NOTE: if set to `true`, `zone_ids` must set together.
	// +kubebuilder:validation:Optional
	MultiZoneFlag *bool `json:"multiZoneFlag,omitempty" tf:"multi_zone_flag,omitempty"`

	// Partition Size. Its interval varies with bandwidth, and the input must be within the interval, which can be viewed through the control. If it is not within the interval, the plan will cause a change when first created.
	// +kubebuilder:validation:Optional
	Partition *float64 `json:"partition,omitempty" tf:"partition,omitempty"`

	// Prepaid purchase time, such as 1, is one month.
	// +kubebuilder:validation:Optional
	Period *float64 `json:"period,omitempty" tf:"period,omitempty"`

	// Timestamp.
	// +kubebuilder:validation:Optional
	PublicNetwork *float64 `json:"publicNetwork,omitempty" tf:"public_network,omitempty"`

	// Modification of the rebalancing time after upgrade.
	// +kubebuilder:validation:Optional
	RebalanceTime *float64 `json:"rebalanceTime,omitempty" tf:"rebalance_time,omitempty"`

	// Prepaid automatic renewal mark, 0 means the default state, the initial state, 1 means automatic renewal, 2 means clear no automatic renewal (user setting).
	// +kubebuilder:validation:Optional
	RenewFlag *float64 `json:"renewFlag,omitempty" tf:"renew_flag,omitempty"`

	// Subnet id.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-tencentcloud/apis/vpc/v1alpha1.Subnet
	// +kubebuilder:validation:Optional
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// +kubebuilder:validation:Optional
	SubnetIDRef *v1.Reference `json:"subnetIdRef,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	SubnetIDSelector *v1.Selector `json:"subnetIdSelector,omitempty" tf:"-"`

	// Tag set of instance.
	// +kubebuilder:validation:Optional
	TagSet map[string]*string `json:"tagSet,omitempty" tf:"tag_set,omitempty"`

	// Tags of instance. Partition size, the professional version does not need tag.
	// +kubebuilder:validation:Optional
	Tags []TagsParameters `json:"tags,omitempty" tf:"tags,omitempty"`

	// Vpc id.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-tencentcloud/apis/vpc/v1alpha1.VPC
	// +kubebuilder:validation:Optional
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// +kubebuilder:validation:Optional
	VPCIDRef *v1.Reference `json:"vpcidRef,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	VPCIDSelector *v1.Selector `json:"vpcidSelector,omitempty" tf:"-"`

	// Available zone id.
	// +kubebuilder:validation:Required
	ZoneID *float64 `json:"zoneId" tf:"zone_id,omitempty"`

	// List of available zone id. NOTE: this argument must set together with `multi_zone_flag`.
	// +kubebuilder:validation:Optional
	ZoneIds []*float64 `json:"zoneIds,omitempty" tf:"zone_ids,omitempty"`
}

type TagsObservation struct {
}

type TagsParameters struct {

	// Tag key.
	// +kubebuilder:validation:Required
	Key *string `json:"key" tf:"key,omitempty"`

	// Tag value.
	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

// InstanceSpec defines the desired state of Instance
type InstanceSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     InstanceParameters `json:"forProvider"`
}

// InstanceStatus defines the observed state of Instance.
type InstanceStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        InstanceObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// Instance is the Schema for the Instances API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,tencentcloudjet}
type Instance struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              InstanceSpec   `json:"spec"`
	Status            InstanceStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// InstanceList contains a list of Instances
type InstanceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Instance `json:"items"`
}

// Repository type metadata.
var (
	Instance_Kind             = "Instance"
	Instance_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Instance_Kind}.String()
	Instance_KindAPIVersion   = Instance_Kind + "." + CRDGroupVersion.String()
	Instance_GroupVersionKind = CRDGroupVersion.WithKind(Instance_Kind)
)

func init() {
	SchemeBuilder.Register(&Instance{}, &InstanceList{})
}
