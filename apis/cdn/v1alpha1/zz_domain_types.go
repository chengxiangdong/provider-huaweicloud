/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AuthenticationObservation struct {
}

type AuthenticationParameters struct {

	// Authentication switching, available values: `on`, `off`.
	// +kubebuilder:validation:Optional
	Switch *string `json:"switch,omitempty" tf:"switch,omitempty"`

	// Timestamp hotlink protection mode A configuration.
	// +kubebuilder:validation:Optional
	TypeA []TypeAParameters `json:"typeA,omitempty" tf:"type_a,omitempty"`

	// Timestamp hotlink protection mode B configuration. NOTE: according to upgrading of TencentCloud Platform, TypeB is unavailable for now.
	// +kubebuilder:validation:Optional
	TypeB []TypeBParameters `json:"typeB,omitempty" tf:"type_b,omitempty"`

	// Timestamp hotlink protection mode C configuration.
	// +kubebuilder:validation:Optional
	TypeC []TypeCParameters `json:"typeC,omitempty" tf:"type_c,omitempty"`

	// Timestamp hotlink protection mode D configuration.
	// +kubebuilder:validation:Optional
	TypeD []TypeDParameters `json:"typeD,omitempty" tf:"type_d,omitempty"`
}

type AwsPrivateAccessObservation struct {
}

type AwsPrivateAccessParameters struct {

	// Access ID.
	// +kubebuilder:validation:Optional
	AccessKeySecretRef *v1.SecretKeySelector `json:"accessKeySecretRef,omitempty" tf:"-"`

	// Bucket.
	// +kubebuilder:validation:Optional
	Bucket *string `json:"bucket,omitempty" tf:"bucket,omitempty"`

	// Region.
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Key.
	// +kubebuilder:validation:Optional
	SecretKeySecretRef *v1.SecretKeySelector `json:"secretKeySecretRef,omitempty" tf:"-"`

	// Configuration switch, available values: `on`, `off` (default).
	// +kubebuilder:validation:Required
	Switch *string `json:"switch" tf:"switch,omitempty"`
}

type BandWidthAlertObservation struct {
	LastTriggerTime *string `json:"lastTriggerTime,omitempty" tf:"last_trigger_time,omitempty"`

	LastTriggerTimeOverseas *string `json:"lastTriggerTimeOverseas,omitempty" tf:"last_trigger_time_overseas,omitempty"`
}

type BandWidthAlertParameters struct {

	// Alert percentage.
	// +kubebuilder:validation:Optional
	AlertPercentage *float64 `json:"alertPercentage,omitempty" tf:"alert_percentage,omitempty"`

	// Switch alert.
	// +kubebuilder:validation:Optional
	AlertSwitch *string `json:"alertSwitch,omitempty" tf:"alert_switch,omitempty"`

	// threshold of bps.
	// +kubebuilder:validation:Optional
	BpsThreshold *float64 `json:"bpsThreshold,omitempty" tf:"bps_threshold,omitempty"`

	// Counter measure.
	// +kubebuilder:validation:Optional
	CounterMeasure *string `json:"counterMeasure,omitempty" tf:"counter_measure,omitempty"`

	// Metric.
	// +kubebuilder:validation:Optional
	Metric *string `json:"metric,omitempty" tf:"metric,omitempty"`

	// Specify statistic item configuration.
	// +kubebuilder:validation:Optional
	StatisticItem []StatisticItemParameters `json:"statisticItem,omitempty" tf:"statistic_item,omitempty"`

	// Configuration switch, available values: `on`, `off` (default).
	// +kubebuilder:validation:Required
	Switch *string `json:"switch" tf:"switch,omitempty"`
}

type CacheRulesObservation struct {
}

type CacheRulesParameters struct {

	// Status code cache expiration time (in seconds).
	// +kubebuilder:validation:Required
	CacheTime *float64 `json:"cacheTime" tf:"cache_time,omitempty"`

	// Code of status cache. available values: `403`, `404`.
	// +kubebuilder:validation:Required
	StatusCode *string `json:"statusCode" tf:"status_code,omitempty"`
}

type CappingRulesObservation struct {
}

type CappingRulesParameters struct {

	// Capping rule kbps threshold.
	// +kubebuilder:validation:Required
	KbpsThreshold *float64 `json:"kbpsThreshold" tf:"kbps_threshold,omitempty"`

	// List of capping rule path.
	// +kubebuilder:validation:Required
	RulePaths []*string `json:"rulePaths" tf:"rule_paths,omitempty"`

	// Capping rule type.
	// +kubebuilder:validation:Required
	RuleType *string `json:"ruleType" tf:"rule_type,omitempty"`
}

type ClientCertificateConfigObservation struct {
	CertificateName *string `json:"certificateName,omitempty" tf:"certificate_name,omitempty"`

	DeployTime *string `json:"deployTime,omitempty" tf:"deploy_time,omitempty"`

	ExpireTime *string `json:"expireTime,omitempty" tf:"expire_time,omitempty"`
}

type ClientCertificateConfigParameters struct {

	// Client Certificate PEM format, requires Base64 encoding.
	// +kubebuilder:validation:Required
	CertificateContent *string `json:"certificateContent" tf:"certificate_content,omitempty"`
}

type CompressionObservation struct {
}

type CompressionParameters struct {

	// List of compression rules.
	// +kubebuilder:validation:Optional
	CompressionRules []CompressionRulesParameters `json:"compressionRules,omitempty" tf:"compression_rules,omitempty"`

	// Configuration switch, available values: `on`, `off` (default).
	// +kubebuilder:validation:Required
	Switch *string `json:"switch" tf:"switch,omitempty"`
}

type CompressionRulesObservation struct {
}

type CompressionRulesParameters struct {

	// List of algorithms, available: `gzip` and `brotli`.
	// +kubebuilder:validation:Required
	Algorithms []*string `json:"algorithms" tf:"algorithms,omitempty"`

	// Must be set as true, enables compression.
	// +kubebuilder:validation:Required
	Compress *bool `json:"compress" tf:"compress,omitempty"`

	// List of file extensions like `jpg`, `txt`.
	// +kubebuilder:validation:Optional
	FileExtensions []*string `json:"fileExtensions,omitempty" tf:"file_extensions,omitempty"`

	// The maximum file size to trigger compression (in bytes).
	// +kubebuilder:validation:Required
	MaxLength *float64 `json:"maxLength" tf:"max_length,omitempty"`

	// The minimum file size to trigger compression (in bytes).
	// +kubebuilder:validation:Required
	MinLength *float64 `json:"minLength" tf:"min_length,omitempty"`

	// List of rule paths for each `rule_type`: `*` for `all`, file ext like `jpg` for `file`, `/dir/like/` for `directory` and `/path/index.html` for `path`.
	// +kubebuilder:validation:Optional
	RulePaths []*string `json:"rulePaths,omitempty" tf:"rule_paths,omitempty"`

	// Rule type, available: `all`, `file`, `directory`, `path`, `contentType`.
	// +kubebuilder:validation:Optional
	RuleType *string `json:"ruleType,omitempty" tf:"rule_type,omitempty"`
}

type DomainObservation struct {
	BandWidthAlert []BandWidthAlertObservation `json:"bandWidthAlert,omitempty" tf:"band_width_alert,omitempty"`

	Cname *string `json:"cname,omitempty" tf:"cname,omitempty"`

	CreateTime *string `json:"createTime,omitempty" tf:"create_time,omitempty"`

	DryRunCreateResult *string `json:"dryRunCreateResult,omitempty" tf:"dry_run_create_result,omitempty"`

	DryRunUpdateResult *string `json:"dryRunUpdateResult,omitempty" tf:"dry_run_update_result,omitempty"`

	HTTPSConfig []HTTPSConfigObservation `json:"httpsConfig,omitempty" tf:"https_config,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	Status *string `json:"status,omitempty" tf:"status,omitempty"`
}

type DomainParameters struct {

	// Domain name acceleration region. `mainland`: acceleration inside mainland China, `overseas`: acceleration outside mainland China, `global`: global acceleration. Overseas acceleration service must be enabled to use overseas acceleration and global acceleration.
	// +kubebuilder:validation:Optional
	Area *string `json:"area,omitempty" tf:"area,omitempty"`

	// Specify timestamp hotlink protection configuration, NOTE: only one type can choose for the sub elements.
	// +kubebuilder:validation:Optional
	Authentication []AuthenticationParameters `json:"authentication,omitempty" tf:"authentication,omitempty"`

	// Access authentication for S3 origin.
	// +kubebuilder:validation:Optional
	AwsPrivateAccess []AwsPrivateAccessParameters `json:"awsPrivateAccess,omitempty" tf:"aws_private_access,omitempty"`

	// Bandwidth cap configuration.
	// +kubebuilder:validation:Optional
	BandWidthAlert []BandWidthAlertParameters `json:"bandWidthAlert,omitempty" tf:"band_width_alert,omitempty"`

	// Smart compression configurations.
	// +kubebuilder:validation:Optional
	Compression []CompressionParameters `json:"compression,omitempty" tf:"compression,omitempty"`

	// Name of the acceleration domain.
	// +kubebuilder:validation:Required
	Domain *string `json:"domain" tf:"domain,omitempty"`

	// Downstream capping configuration.
	// +kubebuilder:validation:Optional
	DownstreamCapping []DownstreamCappingParameters `json:"downstreamCapping,omitempty" tf:"downstream_capping,omitempty"`

	// Error page configurations.
	// +kubebuilder:validation:Optional
	ErrorPage []ErrorPageParameters `json:"errorPage,omitempty" tf:"error_page,omitempty"`

	// Used for validate only by store arguments to request json string as expected, WARNING: if set to `true`, NO Cloud Api will be invoked but store as local data, do not use this argument unless you really know what you are doing.
	// +kubebuilder:validation:Optional
	ExplicitUsingDryRun *bool `json:"explicitUsingDryRun,omitempty" tf:"explicit_using_dry_run,omitempty"`

	// 301/302 redirect following switch, available values: `on`, `off` (default).
	// +kubebuilder:validation:Optional
	FollowRedirectSwitch *string `json:"followRedirectSwitch,omitempty" tf:"follow_redirect_switch,omitempty"`

	// Whether to enable full-path cache. Default value is `true`.
	// +kubebuilder:validation:Optional
	FullURLCache *bool `json:"fullUrlCache,omitempty" tf:"full_url_cache,omitempty"`

	// HTTPS acceleration configuration. It's a list and consist of at most one item.
	// +kubebuilder:validation:Optional
	HTTPSConfig []HTTPSConfigParameters `json:"httpsConfig,omitempty" tf:"https_config,omitempty"`

	// Access authentication for OBS origin.
	// +kubebuilder:validation:Optional
	HwPrivateAccess []HwPrivateAccessParameters `json:"hwPrivateAccess,omitempty" tf:"hw_private_access,omitempty"`

	// Specify Ip filter configurations.
	// +kubebuilder:validation:Optional
	IPFilter []IPFilterParameters `json:"ipFilter,omitempty" tf:"ip_filter,omitempty"`

	// Specify Ip frequency limit configurations.
	// +kubebuilder:validation:Optional
	IPFreqLimit []IPFreqLimitParameters `json:"ipFreqLimit,omitempty" tf:"ip_freq_limit,omitempty"`

	// ipv6 access configuration switch. Only available when area set to `mainland`. Valid values are `on` and `off`. Default value is `off`.
	// +kubebuilder:validation:Optional
	IPv6AccessSwitch *string `json:"ipv6AccessSwitch,omitempty" tf:"ipv6_access_switch,omitempty"`

	// Browser cache configuration. (This feature is in beta and not generally available yet).
	// +kubebuilder:validation:Optional
	MaxAge []MaxAgeParameters `json:"maxAge,omitempty" tf:"max_age,omitempty"`

	// Offline cache switch, available values: `on`, `off` (default).
	// +kubebuilder:validation:Optional
	OfflineCacheSwitch *string `json:"offlineCacheSwitch,omitempty" tf:"offline_cache_switch,omitempty"`

	// Origin server configuration. It's a list and consist of at most one item.
	// +kubebuilder:validation:Required
	Origin []OriginParameters `json:"origin" tf:"origin,omitempty"`

	// Cross-border linkage optimization configuration. (This feature is in beta and not generally available yet).
	// +kubebuilder:validation:Optional
	OriginPullOptimization []OriginPullOptimizationParameters `json:"originPullOptimization,omitempty" tf:"origin_pull_optimization,omitempty"`

	// Cross-border linkage optimization configuration.
	// +kubebuilder:validation:Optional
	OriginPullTimeout []OriginPullTimeoutParameters `json:"originPullTimeout,omitempty" tf:"origin_pull_timeout,omitempty"`

	// Access authentication for OSS origin.
	// +kubebuilder:validation:Optional
	OssPrivateAccess []OssPrivateAccessParameters `json:"ossPrivateAccess,omitempty" tf:"oss_private_access,omitempty"`

	// Maximum post size configuration.
	// +kubebuilder:validation:Optional
	PostMaxSize []PostMaxSizeParameters `json:"postMaxSize,omitempty" tf:"post_max_size,omitempty"`

	// The project CDN belongs to, default to 0.
	// +kubebuilder:validation:Optional
	ProjectID *float64 `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// Access authentication for OBS origin.
	// +kubebuilder:validation:Optional
	QnPrivateAccess []QnPrivateAccessParameters `json:"qnPrivateAccess,omitempty" tf:"qn_private_access,omitempty"`

	// QUIC switch, available values: `on`, `off` (default).
	// +kubebuilder:validation:Optional
	QuicSwitch *string `json:"quicSwitch,omitempty" tf:"quic_switch,omitempty"`

	// Sharding back to source configuration switch. Valid values are `on` and `off`. Default value is `on`.
	// +kubebuilder:validation:Optional
	RangeOriginSwitch *string `json:"rangeOriginSwitch,omitempty" tf:"range_origin_switch,omitempty"`

	// Referer configuration.
	// +kubebuilder:validation:Optional
	Referer []RefererParameters `json:"referer,omitempty" tf:"referer,omitempty"`

	// Request header configuration. It's a list and consist of at most one item.
	// +kubebuilder:validation:Optional
	RequestHeader []RequestHeaderParameters `json:"requestHeader,omitempty" tf:"request_header,omitempty"`

	// Response header configurations.
	// +kubebuilder:validation:Optional
	ResponseHeader []ResponseHeaderParameters `json:"responseHeader,omitempty" tf:"response_header,omitempty"`

	// Response header cache switch, available values: `on`, `off` (default).
	// +kubebuilder:validation:Optional
	ResponseHeaderCacheSwitch *string `json:"responseHeaderCacheSwitch,omitempty" tf:"response_header_cache_switch,omitempty"`

	// Advanced path cache configuration.
	// +kubebuilder:validation:Optional
	RuleCache []RuleCacheParameters `json:"ruleCache,omitempty" tf:"rule_cache,omitempty"`

	// SEO switch, available values: `on`, `off` (default).
	// +kubebuilder:validation:Optional
	SeoSwitch *string `json:"seoSwitch,omitempty" tf:"seo_switch,omitempty"`

	// Acceleration domain name service type. `web`: static acceleration, `download`: download acceleration, `media`: streaming media VOD acceleration.
	// +kubebuilder:validation:Required
	ServiceType *string `json:"serviceType" tf:"service_type,omitempty"`

	// Specific configuration for mainland, NOTE: Both specifying full schema or using it is superfluous, please use cloud api parameters json passthroughs, check the [Data Types](https://www.tencentcloud.com/document/api/228/31739#MainlandConfig) for more details.
	// +kubebuilder:validation:Optional
	SpecificConfigMainland *string `json:"specificConfigMainland,omitempty" tf:"specific_config_mainland,omitempty"`

	// Specific configuration for oversea, NOTE: Both specifying full schema or using it is superfluous, please use cloud api parameters json passthroughs, check the [Data Types](https://www.tencentcloud.com/document/api/228/31739#OverseaConfig) for more details.
	// +kubebuilder:validation:Optional
	SpecificConfigOverseas *string `json:"specificConfigOverseas,omitempty" tf:"specific_config_overseas,omitempty"`

	// Status code cache configurations.
	// +kubebuilder:validation:Optional
	StatusCodeCache []StatusCodeCacheParameters `json:"statusCodeCache,omitempty" tf:"status_code_cache,omitempty"`

	// Tags of cdn domain.
	// +kubebuilder:validation:Optional
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// Video seek switch, available values: `on`, `off` (default).
	// +kubebuilder:validation:Optional
	VideoSeekSwitch *string `json:"videoSeekSwitch,omitempty" tf:"video_seek_switch,omitempty"`
}

type DownstreamCappingObservation struct {
}

type DownstreamCappingParameters struct {

	// List of capping rule.
	// +kubebuilder:validation:Optional
	CappingRules []CappingRulesParameters `json:"cappingRules,omitempty" tf:"capping_rules,omitempty"`

	// Configuration switch, available values: `on`, `off` (default).
	// +kubebuilder:validation:Required
	Switch *string `json:"switch" tf:"switch,omitempty"`
}

type ErrorPageObservation struct {
}

type ErrorPageParameters struct {

	// List of error page rule.
	// +kubebuilder:validation:Optional
	PageRules []PageRulesParameters `json:"pageRules,omitempty" tf:"page_rules,omitempty"`

	// Configuration switch, available values: `on`, `off` (default).
	// +kubebuilder:validation:Required
	Switch *string `json:"switch" tf:"switch,omitempty"`
}

type FilterRulesObservation struct {
}

type FilterRulesParameters struct {

	// Ip filter `blacklist`/`whitelist` type of filter rules.
	// +kubebuilder:validation:Required
	FilterType *string `json:"filterType" tf:"filter_type,omitempty"`

	// Ip filter rule list, supports IPs in X.X.X.X format, or /8, /16, /24 format IP ranges. Up to 50 allowlists or blocklists can be entered.
	// +kubebuilder:validation:Required
	Filters []*string `json:"filters" tf:"filters,omitempty"`

	// Content list for each `rule_type`: `*` for `all`, file ext like `jpg` for `file`, `/dir/like/` for `directory` and `/path/index.html` for `path`.
	// +kubebuilder:validation:Required
	RulePaths []*string `json:"rulePaths" tf:"rule_paths,omitempty"`

	// Ip filter rule type of filter rules, available: `all`, `file`, `directory`, `path`.
	// +kubebuilder:validation:Required
	RuleType *string `json:"ruleType" tf:"rule_type,omitempty"`
}

type ForceRedirectObservation struct {
}

type ForceRedirectParameters struct {

	// Whether to return the newly added header during force redirection. Values: `on`, `off`.
	// +kubebuilder:validation:Optional
	CarryHeaders *string `json:"carryHeaders,omitempty" tf:"carry_headers,omitempty"`

	// Forced redirect status code. Valid values are `301` and `302`. When `switch` setting `off`, this property does not need to be set or set to `302`. Default value is `302`.
	// +kubebuilder:validation:Optional
	RedirectStatusCode *float64 `json:"redirectStatusCode,omitempty" tf:"redirect_status_code,omitempty"`

	// Forced redirect type. Valid values are `http` and `https`. `http` means a forced redirect from HTTPS to HTTP, `https` means a forced redirect from HTTP to HTTPS. When `switch` setting `off`, this property does not need to be set or set to `http`. Default value is `http`.
	// +kubebuilder:validation:Optional
	RedirectType *string `json:"redirectType,omitempty" tf:"redirect_type,omitempty"`

	// Forced redirect configuration switch. Valid values are `on` and `off`. Default value is `off`.
	// +kubebuilder:validation:Optional
	Switch *string `json:"switch,omitempty" tf:"switch,omitempty"`
}

type HTTPSConfigObservation struct {
	ClientCertificateConfig []ClientCertificateConfigObservation `json:"clientCertificateConfig,omitempty" tf:"client_certificate_config,omitempty"`

	ServerCertificateConfig []ServerCertificateConfigObservation `json:"serverCertificateConfig,omitempty" tf:"server_certificate_config,omitempty"`
}

type HTTPSConfigParameters struct {

	// Client certificate configuration information.
	// +kubebuilder:validation:Optional
	ClientCertificateConfig []ClientCertificateConfigParameters `json:"clientCertificateConfig,omitempty" tf:"client_certificate_config,omitempty"`

	// Configuration of forced HTTP or HTTPS redirects.
	// +kubebuilder:validation:Optional
	ForceRedirect []ForceRedirectParameters `json:"forceRedirect,omitempty" tf:"force_redirect,omitempty"`

	// HTTPS configuration switch. Valid values are `on` and `off`.
	// +kubebuilder:validation:Required
	HTTPSSwitch *string `json:"httpsSwitch" tf:"https_switch,omitempty"`

	// HTTP2 configuration switch. Valid values are `on` and `off`. and default value is `off`.
	// +kubebuilder:validation:Optional
	Http2Switch *string `json:"http2Switch,omitempty" tf:"http2_switch,omitempty"`

	// OCSP configuration switch. Valid values are `on` and `off`. and default value is `off`.
	// +kubebuilder:validation:Optional
	OcspStaplingSwitch *string `json:"ocspStaplingSwitch,omitempty" tf:"ocsp_stapling_switch,omitempty"`

	// Server certificate configuration information.
	// +kubebuilder:validation:Optional
	ServerCertificateConfig []ServerCertificateConfigParameters `json:"serverCertificateConfig,omitempty" tf:"server_certificate_config,omitempty"`

	// Spdy configuration switch. Valid values are `on` and `off`. and default value is `off`. This parameter is for white-list customer.
	// +kubebuilder:validation:Optional
	SpdySwitch *string `json:"spdySwitch,omitempty" tf:"spdy_switch,omitempty"`

	// Tls version settings, only support some Advanced domain names, support settings TLSv1, TLSV1.1, TLSV1.2, TLSv1.3, when modifying must open consecutive versions.
	// +kubebuilder:validation:Optional
	TLSVersions []*string `json:"tlsVersions,omitempty" tf:"tls_versions,omitempty"`

	// Client certificate authentication feature. Valid values are `on` and `off`. and default value is `off`.
	// +kubebuilder:validation:Optional
	VerifyClient *string `json:"verifyClient,omitempty" tf:"verify_client,omitempty"`
}

type HeaderRulesObservation struct {
}

type HeaderRulesParameters struct {

	// Http header setting method. The following types are supported: `add`: add a head, if a head already exists, there will be a duplicate head, `del`: delete the head.
	// +kubebuilder:validation:Required
	HeaderMode *string `json:"headerMode" tf:"header_mode,omitempty"`

	// Http header name.
	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// Http header value, optional when Mode is `del`, Required when Mode is `add`/`set`.
	// +kubebuilder:validation:Required
	HeaderValue *string `json:"headerValue" tf:"header_value,omitempty"`

	// Matching content under the corresponding type of CacheType: `all`: fill *, `file`: fill in the suffix name, such as jpg, txt, `directory`: fill in the path, such as /xxx/test, `path`: fill in the absolute path, such as /xxx/test.html.
	// +kubebuilder:validation:Required
	RulePaths []*string `json:"rulePaths" tf:"rule_paths,omitempty"`

	// Rule type. The following types are supported: `all`: all documents take effect, `file`: the specified file suffix takes effect, `directory`: the specified path takes effect, `path`: specify the absolute path to take effect.
	// +kubebuilder:validation:Required
	RuleType *string `json:"ruleType" tf:"rule_type,omitempty"`
}

type HwPrivateAccessObservation struct {
}

type HwPrivateAccessParameters struct {

	// Access ID.
	// +kubebuilder:validation:Optional
	AccessKeySecretRef *v1.SecretKeySelector `json:"accessKeySecretRef,omitempty" tf:"-"`

	// Bucket.
	// +kubebuilder:validation:Optional
	Bucket *string `json:"bucket,omitempty" tf:"bucket,omitempty"`

	// Key.
	// +kubebuilder:validation:Optional
	SecretKeySecretRef *v1.SecretKeySelector `json:"secretKeySecretRef,omitempty" tf:"-"`

	// Configuration switch, available values: `on`, `off` (default).
	// +kubebuilder:validation:Required
	Switch *string `json:"switch" tf:"switch,omitempty"`
}

type IPFilterObservation struct {
}

type IPFilterParameters struct {

	// Ip filter rules, This feature is only available to selected beta customers.
	// +kubebuilder:validation:Optional
	FilterRules []FilterRulesParameters `json:"filterRules,omitempty" tf:"filter_rules,omitempty"`

	// IP `blacklist`/`whitelist` type.
	// +kubebuilder:validation:Optional
	FilterType *string `json:"filterType,omitempty" tf:"filter_type,omitempty"`

	// Ip filter list, Supports IPs in X.X.X.X format, or /8, /16, /24 format IP ranges. Up to 50 allowlists or blocklists can be entered.
	// +kubebuilder:validation:Optional
	Filters []*string `json:"filters,omitempty" tf:"filters,omitempty"`

	// Return code, available values: 400-499.
	// +kubebuilder:validation:Optional
	ReturnCode *float64 `json:"returnCode,omitempty" tf:"return_code,omitempty"`

	// Configuration switch, available values: `on`, `off` (default).
	// +kubebuilder:validation:Required
	Switch *string `json:"switch" tf:"switch,omitempty"`
}

type IPFreqLimitObservation struct {
}

type IPFreqLimitParameters struct {

	// Sets the limited number of requests per second, 514 will be returned for requests that exceed the limit.
	// +kubebuilder:validation:Optional
	QPS *float64 `json:"qps,omitempty" tf:"qps,omitempty"`

	// Configuration switch, available values: `on`, `off` (default).
	// +kubebuilder:validation:Required
	Switch *string `json:"switch" tf:"switch,omitempty"`
}

type MaxAgeObservation struct {
}

type MaxAgeParameters struct {

	// List of Max Age rule configuration.
	// +kubebuilder:validation:Optional
	MaxAgeRules []MaxAgeRulesParameters `json:"maxAgeRules,omitempty" tf:"max_age_rules,omitempty"`

	// Configuration switch, available values: `on`, `off` (default).
	// +kubebuilder:validation:Required
	Switch *string `json:"switch" tf:"switch,omitempty"`
}

type MaxAgeRulesObservation struct {
}

type MaxAgeRulesParameters struct {

	// Whether to follow origin, values: `on`/`off`, if set to `on`, the `max_age_time` will be ignored.
	// +kubebuilder:validation:Optional
	FollowOrigin *string `json:"followOrigin,omitempty" tf:"follow_origin,omitempty"`

	// List of rule paths for each `max_age_type`: `*` for `all`, file ext like `jpg` for `file`, `/dir/like/` for `directory` and `/path/index.html` for `path`.
	// +kubebuilder:validation:Required
	MaxAgeContents []*string `json:"maxAgeContents" tf:"max_age_contents,omitempty"`

	// Max Age time in seconds, this can set to `0` that stands for no cache.
	// +kubebuilder:validation:Required
	MaxAgeTime *float64 `json:"maxAgeTime" tf:"max_age_time,omitempty"`

	// The following types are supported: `all`: all documents take effect, `file`: the specified file suffix takes effect, `directory`: the specified path takes effect, `path`: specify the absolute path to take effect, `index`: home page, `default`: effective when the source site has no max-age.
	// +kubebuilder:validation:Required
	MaxAgeType *string `json:"maxAgeType" tf:"max_age_type,omitempty"`
}

type OriginObservation struct {
}

type OriginParameters struct {

	// Backup origin server list. Valid values can be ip or domain name. When modifying the backup origin server, you need to enter the corresponding `backup_origin_type`.
	// +kubebuilder:validation:Optional
	BackupOriginList []*string `json:"backupOriginList,omitempty" tf:"backup_origin_list,omitempty"`

	// Backup origin server type, which supports the following types: `domain`: domain name type, `ip`: IP list used as origin server.
	// +kubebuilder:validation:Optional
	BackupOriginType *string `json:"backupOriginType,omitempty" tf:"backup_origin_type,omitempty"`

	// Host header used when accessing the backup origin server. If left empty, the ServerName of master origin server will be used by default.
	// +kubebuilder:validation:Optional
	BackupServerName *string `json:"backupServerName,omitempty" tf:"backup_server_name,omitempty"`

	// When OriginType is COS, you can specify if access to private buckets is allowed. Valid values are `on` and `off`. and default value is `off`.
	// +kubebuilder:validation:Optional
	CosPrivateAccess *string `json:"cosPrivateAccess,omitempty" tf:"cos_private_access,omitempty"`

	// Master origin server list. Valid values can be ip or domain name. When modifying the origin server, you need to enter the corresponding `origin_type`.
	// +kubebuilder:validation:Required
	OriginList []*string `json:"originList" tf:"origin_list,omitempty"`

	// Origin-pull protocol configuration. `http`: forced HTTP origin-pull, `follow`: protocol follow origin-pull, `https`: forced HTTPS origin-pull. This only supports origin server port 443 for origin-pull.
	// +kubebuilder:validation:Optional
	OriginPullProtocol *string `json:"originPullProtocol,omitempty" tf:"origin_pull_protocol,omitempty"`

	// Master origin server type. The following types are supported: `domain`: domain name type, `cos`: COS origin, `ip`: IP list used as origin server, `ipv6`: origin server list is a single IPv6 address, `ip_ipv6`: origin server list is multiple IPv4 addresses and an IPv6 address.
	// +kubebuilder:validation:Required
	OriginType *string `json:"originType" tf:"origin_type,omitempty"`

	// Host header used when accessing the master origin server. If left empty, the acceleration domain name will be used by default.
	// +kubebuilder:validation:Optional
	ServerName *string `json:"serverName,omitempty" tf:"server_name,omitempty"`
}

type OriginPullOptimizationObservation struct {
}

type OriginPullOptimizationParameters struct {

	// Optimization type, values: `OVToCN` - Overseas to CN, `CNToOV` CN to Overseas.
	// +kubebuilder:validation:Optional
	OptimizationType *string `json:"optimizationType,omitempty" tf:"optimization_type,omitempty"`

	// Configuration switch, available values: `on`, `off` (default).
	// +kubebuilder:validation:Required
	Switch *string `json:"switch" tf:"switch,omitempty"`
}

type OriginPullTimeoutObservation struct {
}

type OriginPullTimeoutParameters struct {

	// The origin-pull connection timeout (in seconds). Valid range: 5-60.
	// +kubebuilder:validation:Required
	ConnectTimeout *float64 `json:"connectTimeout" tf:"connect_timeout,omitempty"`

	// The origin-pull receipt timeout (in seconds). Valid range: 10-60.
	// +kubebuilder:validation:Required
	ReceiveTimeout *float64 `json:"receiveTimeout" tf:"receive_timeout,omitempty"`
}

type OssPrivateAccessObservation struct {
}

type OssPrivateAccessParameters struct {

	// Access ID.
	// +kubebuilder:validation:Optional
	AccessKeySecretRef *v1.SecretKeySelector `json:"accessKeySecretRef,omitempty" tf:"-"`

	// Bucket.
	// +kubebuilder:validation:Optional
	Bucket *string `json:"bucket,omitempty" tf:"bucket,omitempty"`

	// Region.
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Key.
	// +kubebuilder:validation:Optional
	SecretKeySecretRef *v1.SecretKeySelector `json:"secretKeySecretRef,omitempty" tf:"-"`

	// Configuration switch, available values: `on`, `off` (default).
	// +kubebuilder:validation:Required
	Switch *string `json:"switch" tf:"switch,omitempty"`
}

type PageRulesObservation struct {
}

type PageRulesParameters struct {

	// Redirect code of error page rules.
	// +kubebuilder:validation:Required
	RedirectCode *float64 `json:"redirectCode" tf:"redirect_code,omitempty"`

	// Redirect url of error page rules.
	// +kubebuilder:validation:Required
	RedirectURL *string `json:"redirectUrl" tf:"redirect_url,omitempty"`

	// Status code of error page rules.
	// +kubebuilder:validation:Required
	StatusCode *float64 `json:"statusCode" tf:"status_code,omitempty"`
}

type PostMaxSizeObservation struct {
}

type PostMaxSizeParameters struct {

	// Maximum size in MB, value range is `[1, 200]`.
	// +kubebuilder:validation:Optional
	MaxSize *float64 `json:"maxSize,omitempty" tf:"max_size,omitempty"`

	// Configuration switch, available values: `on`, `off` (default).
	// +kubebuilder:validation:Required
	Switch *string `json:"switch" tf:"switch,omitempty"`
}

type QnPrivateAccessObservation struct {
}

type QnPrivateAccessParameters struct {

	// Access ID.
	// +kubebuilder:validation:Optional
	AccessKeySecretRef *v1.SecretKeySelector `json:"accessKeySecretRef,omitempty" tf:"-"`

	// Key.
	// +kubebuilder:validation:Optional
	SecretKeySecretRef *v1.SecretKeySelector `json:"secretKeySecretRef,omitempty" tf:"-"`

	// Configuration switch, available values: `on`, `off` (default).
	// +kubebuilder:validation:Required
	Switch *string `json:"switch" tf:"switch,omitempty"`
}

type RefererObservation struct {
}

type RefererParameters struct {

	// List of referer rules.
	// +kubebuilder:validation:Optional
	RefererRules []RefererRulesParameters `json:"refererRules,omitempty" tf:"referer_rules,omitempty"`

	// Configuration switch, available values: `on`, `off` (default).
	// +kubebuilder:validation:Required
	Switch *string `json:"switch" tf:"switch,omitempty"`
}

type RefererRulesObservation struct {
}

type RefererRulesParameters struct {

	// Whether to allow emptpy.
	// +kubebuilder:validation:Required
	AllowEmpty *bool `json:"allowEmpty" tf:"allow_empty,omitempty"`

	// Referer type.
	// +kubebuilder:validation:Required
	RefererType *string `json:"refererType" tf:"referer_type,omitempty"`

	// Referer list.
	// +kubebuilder:validation:Required
	Referers []*string `json:"referers" tf:"referers,omitempty"`

	// Referer rule path list.
	// +kubebuilder:validation:Required
	RulePaths []*string `json:"rulePaths" tf:"rule_paths,omitempty"`

	// Referer rule type.
	// +kubebuilder:validation:Required
	RuleType *string `json:"ruleType" tf:"rule_type,omitempty"`
}

type RequestHeaderObservation struct {
}

type RequestHeaderParameters struct {

	// Custom request header configuration rules.
	// +kubebuilder:validation:Optional
	HeaderRules []HeaderRulesParameters `json:"headerRules,omitempty" tf:"header_rules,omitempty"`

	// Custom request header configuration switch. Valid values are `on` and `off`. and default value is `off`.
	// +kubebuilder:validation:Optional
	Switch *string `json:"switch,omitempty" tf:"switch,omitempty"`
}

type ResponseHeaderHeaderRulesObservation struct {
}

type ResponseHeaderHeaderRulesParameters struct {

	// Response header mode.
	// +kubebuilder:validation:Required
	HeaderMode *string `json:"headerMode" tf:"header_mode,omitempty"`

	// response header name of rule.
	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// response header value of rule.
	// +kubebuilder:validation:Required
	HeaderValue *string `json:"headerValue" tf:"header_value,omitempty"`

	// response rule paths of rule.
	// +kubebuilder:validation:Required
	RulePaths []*string `json:"rulePaths" tf:"rule_paths,omitempty"`

	// response rule type of rule.
	// +kubebuilder:validation:Required
	RuleType *string `json:"ruleType" tf:"rule_type,omitempty"`
}

type ResponseHeaderObservation struct {
}

type ResponseHeaderParameters struct {

	// List of response header rule.
	// +kubebuilder:validation:Optional
	HeaderRules []ResponseHeaderHeaderRulesParameters `json:"headerRules,omitempty" tf:"header_rules,omitempty"`

	// Configuration switch, available values: `on`, `off` (default).
	// +kubebuilder:validation:Required
	Switch *string `json:"switch" tf:"switch,omitempty"`
}

type RuleCacheObservation struct {
}

type RuleCacheParameters struct {

	// Cache expiration time setting, the unit is second, the maximum can be set to 365 days.
	// +kubebuilder:validation:Required
	CacheTime *float64 `json:"cacheTime" tf:"cache_time,omitempty"`

	// Advanced cache expiration configuration. When it is turned on, it will compare the max-age value returned by the origin site with the cache expiration time set in CacheRules, and take the minimum value to cache at the node. Valid values are `on` and `off`. Default value is `off`.
	// +kubebuilder:validation:Optional
	CompareMaxAge *string `json:"compareMaxAge,omitempty" tf:"compare_max_age,omitempty"`

	// Follow the source station configuration switch. Valid values are `on` and `off`.
	// +kubebuilder:validation:Optional
	FollowOriginSwitch *string `json:"followOriginSwitch,omitempty" tf:"follow_origin_switch,omitempty"`

	// Force caching. After opening, the no-store and no-cache resources returned by the origin site will also be cached in accordance with the CacheRules rules. Valid values are `on` and `off`. Default value is `off`.
	// +kubebuilder:validation:Optional
	IgnoreCacheControl *string `json:"ignoreCacheControl,omitempty" tf:"ignore_cache_control,omitempty"`

	// Ignore the Set-Cookie header of the origin site. Valid values are `on` and `off`. Default value is `off`. This parameter is for white-list customer.
	// +kubebuilder:validation:Optional
	IgnoreSetCookie *string `json:"ignoreSetCookie,omitempty" tf:"ignore_set_cookie,omitempty"`

	// Cache configuration switch. Valid values are `on` and `off`.
	// +kubebuilder:validation:Optional
	NoCacheSwitch *string `json:"noCacheSwitch,omitempty" tf:"no_cache_switch,omitempty"`

	// Always check back to origin. Valid values are `on` and `off`. Default value is `off`.
	// +kubebuilder:validation:Optional
	ReValidate *string `json:"reValidate,omitempty" tf:"re_validate,omitempty"`

	// Matching content under the corresponding type of CacheType: `all`: fill *, `file`: fill in the suffix name, such as jpg, txt, `directory`: fill in the path, such as /xxx/test, `path`: fill in the absolute path, such as /xxx/test.html, `index`: fill /, `default`: Fill `no max-age`.
	// +kubebuilder:validation:Optional
	RulePaths []*string `json:"rulePaths,omitempty" tf:"rule_paths,omitempty"`

	// Rule type. The following types are supported: `all`: all documents take effect, `file`: the specified file suffix takes effect, `directory`: the specified path takes effect, `path`: specify the absolute path to take effect, `index`: home page, `default`: effective when the source site has no max-age.
	// +kubebuilder:validation:Optional
	RuleType *string `json:"ruleType,omitempty" tf:"rule_type,omitempty"`

	// Cache configuration switch. Valid values are `on` and `off`.
	// +kubebuilder:validation:Optional
	Switch *string `json:"switch,omitempty" tf:"switch,omitempty"`
}

type ServerCertificateConfigObservation struct {
	CertificateName *string `json:"certificateName,omitempty" tf:"certificate_name,omitempty"`

	DeployTime *string `json:"deployTime,omitempty" tf:"deploy_time,omitempty"`

	ExpireTime *string `json:"expireTime,omitempty" tf:"expire_time,omitempty"`
}

type ServerCertificateConfigParameters struct {

	// Server certificate information. This is required when uploading an external certificate, which should contain the complete certificate chain.
	// +kubebuilder:validation:Optional
	CertificateContent *string `json:"certificateContent,omitempty" tf:"certificate_content,omitempty"`

	// Server certificate ID.
	// +kubebuilder:validation:Optional
	CertificateID *string `json:"certificateId,omitempty" tf:"certificate_id,omitempty"`

	// Certificate remarks.
	// +kubebuilder:validation:Optional
	Message *string `json:"message,omitempty" tf:"message,omitempty"`

	// Server key information. This is required when uploading an external certificate.
	// +kubebuilder:validation:Optional
	PrivateKey *string `json:"privateKey,omitempty" tf:"private_key,omitempty"`
}

type StatisticItemObservation struct {
}

type StatisticItemParameters struct {

	// Alert percentage.
	// +kubebuilder:validation:Optional
	AlertPercentage *float64 `json:"alertPercentage,omitempty" tf:"alert_percentage,omitempty"`

	// Switch alert.
	// +kubebuilder:validation:Optional
	AlertSwitch *string `json:"alertSwitch,omitempty" tf:"alert_switch,omitempty"`

	// threshold of bps.
	// +kubebuilder:validation:Optional
	BpsThreshold *float64 `json:"bpsThreshold,omitempty" tf:"bps_threshold,omitempty"`

	// Counter measure, values: `RETURN_404`, `RESOLVE_DNS_TO_ORIGIN`.
	// +kubebuilder:validation:Optional
	CounterMeasure *string `json:"counterMeasure,omitempty" tf:"counter_measure,omitempty"`

	// Cycle of checking in minutes, values `60`, `1440`.
	// +kubebuilder:validation:Optional
	Cycle *float64 `json:"cycle,omitempty" tf:"cycle,omitempty"`

	// Metric.
	// +kubebuilder:validation:Optional
	Metric *string `json:"metric,omitempty" tf:"metric,omitempty"`

	// Configuration switch, available values: `on`, `off` (default).
	// +kubebuilder:validation:Required
	Switch *string `json:"switch" tf:"switch,omitempty"`

	// Type of statistic item.
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Time of auto unblock.
	// +kubebuilder:validation:Optional
	UnblockTime *float64 `json:"unblockTime,omitempty" tf:"unblock_time,omitempty"`
}

type StatusCodeCacheObservation struct {
}

type StatusCodeCacheParameters struct {

	// List of cache rule.
	// +kubebuilder:validation:Optional
	CacheRules []CacheRulesParameters `json:"cacheRules,omitempty" tf:"cache_rules,omitempty"`

	// Configuration switch, available values: `on`, `off` (default).
	// +kubebuilder:validation:Required
	Switch *string `json:"switch" tf:"switch,omitempty"`
}

type TypeAObservation struct {
}

type TypeAParameters struct {

	// Used for calculate a signature. 6-32 characters. Only digits and letters are allowed.
	// +kubebuilder:validation:Optional
	BackupSecretKey *string `json:"backupSecretKey,omitempty" tf:"backup_secret_key,omitempty"`

	// Signature expiration time in second. The maximum value is 630720000.
	// +kubebuilder:validation:Required
	ExpireTime *float64 `json:"expireTime" tf:"expire_time,omitempty"`

	// File extension list settings determining if authentication should be performed. NOTE: If it contains an asterisk (*), this indicates all files.
	// +kubebuilder:validation:Required
	FileExtensions []*string `json:"fileExtensions" tf:"file_extensions,omitempty"`

	// Available values: `whitelist` - all types apart from `file_extensions` are authenticated, `blacklist`: - only the types in the `file_extensions` are authenticated.
	// +kubebuilder:validation:Required
	FilterType *string `json:"filterType" tf:"filter_type,omitempty"`

	// The key for signature calculation. Only digits, upper and lower-case letters are allowed. Length limit: 6-32 characters.
	// +kubebuilder:validation:Required
	SecretKey *string `json:"secretKey" tf:"secret_key,omitempty"`

	// Signature parameter name. Only upper and lower-case letters, digits, and underscores (_) are allowed. It cannot start with a digit. Length limit: 1-100 characters.
	// +kubebuilder:validation:Required
	SignParam *string `json:"signParam" tf:"sign_param,omitempty"`
}

type TypeBObservation struct {
}

type TypeBParameters struct {

	// Used for calculate a signature. 6-32 characters. Only digits and letters are allowed.
	// +kubebuilder:validation:Optional
	BackupSecretKey *string `json:"backupSecretKey,omitempty" tf:"backup_secret_key,omitempty"`

	// Signature expiration time in second. The maximum value is 630720000.
	// +kubebuilder:validation:Required
	ExpireTime *float64 `json:"expireTime" tf:"expire_time,omitempty"`

	// File extension list settings determining if authentication should be performed. NOTE: If it contains an asterisk (*), this indicates all files.
	// +kubebuilder:validation:Required
	FileExtensions []*string `json:"fileExtensions" tf:"file_extensions,omitempty"`

	// Available values: `whitelist` - all types apart from `file_extensions` are authenticated, `blacklist`: - only the types in the `file_extensions` are authenticated.
	// +kubebuilder:validation:Required
	FilterType *string `json:"filterType" tf:"filter_type,omitempty"`

	// The key for signature calculation. Only digits, upper and lower-case letters are allowed. Length limit: 6-32 characters.
	// +kubebuilder:validation:Required
	SecretKey *string `json:"secretKey" tf:"secret_key,omitempty"`
}

type TypeCObservation struct {
}

type TypeCParameters struct {

	// Used for calculate a signature. 6-32 characters. Only digits and letters are allowed.
	// +kubebuilder:validation:Optional
	BackupSecretKey *string `json:"backupSecretKey,omitempty" tf:"backup_secret_key,omitempty"`

	// Signature expiration time in second. The maximum value is 630720000.
	// +kubebuilder:validation:Required
	ExpireTime *float64 `json:"expireTime" tf:"expire_time,omitempty"`

	// File extension list settings determining if authentication should be performed. NOTE: If it contains an asterisk (*), this indicates all files.
	// +kubebuilder:validation:Required
	FileExtensions []*string `json:"fileExtensions" tf:"file_extensions,omitempty"`

	// Available values: `whitelist` - all types apart from `file_extensions` are authenticated, `blacklist`: - only the types in the `file_extensions` are authenticated.
	// +kubebuilder:validation:Required
	FilterType *string `json:"filterType" tf:"filter_type,omitempty"`

	// The key for signature calculation. Only digits, upper and lower-case letters are allowed. Length limit: 6-32 characters.
	// +kubebuilder:validation:Required
	SecretKey *string `json:"secretKey" tf:"secret_key,omitempty"`

	// Timestamp formation, available values: `dec`, `hex`.
	// +kubebuilder:validation:Optional
	TimeFormat *string `json:"timeFormat,omitempty" tf:"time_format,omitempty"`
}

type TypeDObservation struct {
}

type TypeDParameters struct {

	// Used for calculate a signature. 6-32 characters. Only digits and letters are allowed.
	// +kubebuilder:validation:Optional
	BackupSecretKey *string `json:"backupSecretKey,omitempty" tf:"backup_secret_key,omitempty"`

	// Signature expiration time in second. The maximum value is 630720000.
	// +kubebuilder:validation:Required
	ExpireTime *float64 `json:"expireTime" tf:"expire_time,omitempty"`

	// File extension list settings determining if authentication should be performed. NOTE: If it contains an asterisk (*), this indicates all files.
	// +kubebuilder:validation:Required
	FileExtensions []*string `json:"fileExtensions" tf:"file_extensions,omitempty"`

	// Available values: `whitelist` - all types apart from `file_extensions` are authenticated, `blacklist`: - only the types in the `file_extensions` are authenticated.
	// +kubebuilder:validation:Required
	FilterType *string `json:"filterType" tf:"filter_type,omitempty"`

	// The key for signature calculation. Only digits, upper and lower-case letters are allowed. Length limit: 6-32 characters.
	// +kubebuilder:validation:Required
	SecretKey *string `json:"secretKey" tf:"secret_key,omitempty"`

	// Timestamp formation, available values: `dec`, `hex`.
	// +kubebuilder:validation:Optional
	TimeFormat *string `json:"timeFormat,omitempty" tf:"time_format,omitempty"`

	// Timestamp parameter name. Only upper and lower-case letters, digits, and underscores (_) are allowed. It cannot start with a digit. Length limit: 1-100 characters.
	// +kubebuilder:validation:Optional
	TimeParam *string `json:"timeParam,omitempty" tf:"time_param,omitempty"`
}

// DomainSpec defines the desired state of Domain
type DomainSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     DomainParameters `json:"forProvider"`
}

// DomainStatus defines the observed state of Domain.
type DomainStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        DomainObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// Domain is the Schema for the Domains API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,tencentcloudjet}
type Domain struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              DomainSpec   `json:"spec"`
	Status            DomainStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// DomainList contains a list of Domains
type DomainList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Domain `json:"items"`
}

// Repository type metadata.
var (
	Domain_Kind             = "Domain"
	Domain_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Domain_Kind}.String()
	Domain_KindAPIVersion   = Domain_Kind + "." + CRDGroupVersion.String()
	Domain_GroupVersionKind = CRDGroupVersion.WithKind(Domain_Kind)
)

func init() {
	SchemeBuilder.Register(&Domain{}, &DomainList{})
}
