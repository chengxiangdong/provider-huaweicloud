// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type LoginPolicyInitParameters struct {

	// Specifies the validity period (days) to disable users
	// if they have not logged in within the period. The valid value is range from 0 to 240.
	AccountValidityPeriod *float64 `json:"accountValidityPeriod,omitempty" tf:"account_validity_period,omitempty"`

	// Specifies the custom information that will be displayed
	// upon successful login.
	CustomInfoForLogin *string `json:"customInfoForLogin,omitempty" tf:"custom_info_for_login,omitempty"`

	// Specifies the duration (minutes) to lock users out.
	// The valid value is range from 15 to 1440, defaults to 15.
	LockoutDuration *float64 `json:"lockoutDuration,omitempty" tf:"lockout_duration,omitempty"`

	// Specifies the number of unsuccessful login attempts to lock users out.
	// The valid value is range from 3 to 10, defaults to 5.
	LoginFailedTimes *float64 `json:"loginFailedTimes,omitempty" tf:"login_failed_times,omitempty"`

	// Specifies the period (minutes) to count the number of unsuccessful
	// login attempts. The valid value is range from 15 to 60, defaults to 15.
	PeriodWithLoginFailures *float64 `json:"periodWithLoginFailures,omitempty" tf:"period_with_login_failures,omitempty"`

	// Specifies the session timeout (minutes) that will apply if you or users created
	// using your account do not perform any operations within a specific period.
	// The valid value is range from 15 to 1,440, defaults to 60.
	SessionTimeout *float64 `json:"sessionTimeout,omitempty" tf:"session_timeout,omitempty"`

	// Specifies whether to display last login information upon successful login.
	// The value can be true or false.
	ShowRecentLoginInfo *bool `json:"showRecentLoginInfo,omitempty" tf:"show_recent_login_info,omitempty"`
}

type LoginPolicyObservation struct {

	// Specifies the validity period (days) to disable users
	// if they have not logged in within the period. The valid value is range from 0 to 240.
	AccountValidityPeriod *float64 `json:"accountValidityPeriod,omitempty" tf:"account_validity_period,omitempty"`

	// Specifies the custom information that will be displayed
	// upon successful login.
	CustomInfoForLogin *string `json:"customInfoForLogin,omitempty" tf:"custom_info_for_login,omitempty"`

	// The ID of account login policy, which is the same as the account ID.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Specifies the duration (minutes) to lock users out.
	// The valid value is range from 15 to 1440, defaults to 15.
	LockoutDuration *float64 `json:"lockoutDuration,omitempty" tf:"lockout_duration,omitempty"`

	// Specifies the number of unsuccessful login attempts to lock users out.
	// The valid value is range from 3 to 10, defaults to 5.
	LoginFailedTimes *float64 `json:"loginFailedTimes,omitempty" tf:"login_failed_times,omitempty"`

	// Specifies the period (minutes) to count the number of unsuccessful
	// login attempts. The valid value is range from 15 to 60, defaults to 15.
	PeriodWithLoginFailures *float64 `json:"periodWithLoginFailures,omitempty" tf:"period_with_login_failures,omitempty"`

	// Specifies the session timeout (minutes) that will apply if you or users created
	// using your account do not perform any operations within a specific period.
	// The valid value is range from 15 to 1,440, defaults to 60.
	SessionTimeout *float64 `json:"sessionTimeout,omitempty" tf:"session_timeout,omitempty"`

	// Specifies whether to display last login information upon successful login.
	// The value can be true or false.
	ShowRecentLoginInfo *bool `json:"showRecentLoginInfo,omitempty" tf:"show_recent_login_info,omitempty"`
}

type LoginPolicyParameters struct {

	// Specifies the validity period (days) to disable users
	// if they have not logged in within the period. The valid value is range from 0 to 240.
	// +kubebuilder:validation:Optional
	AccountValidityPeriod *float64 `json:"accountValidityPeriod,omitempty" tf:"account_validity_period,omitempty"`

	// Specifies the custom information that will be displayed
	// upon successful login.
	// +kubebuilder:validation:Optional
	CustomInfoForLogin *string `json:"customInfoForLogin,omitempty" tf:"custom_info_for_login,omitempty"`

	// Specifies the duration (minutes) to lock users out.
	// The valid value is range from 15 to 1440, defaults to 15.
	// +kubebuilder:validation:Optional
	LockoutDuration *float64 `json:"lockoutDuration,omitempty" tf:"lockout_duration,omitempty"`

	// Specifies the number of unsuccessful login attempts to lock users out.
	// The valid value is range from 3 to 10, defaults to 5.
	// +kubebuilder:validation:Optional
	LoginFailedTimes *float64 `json:"loginFailedTimes,omitempty" tf:"login_failed_times,omitempty"`

	// Specifies the period (minutes) to count the number of unsuccessful
	// login attempts. The valid value is range from 15 to 60, defaults to 15.
	// +kubebuilder:validation:Optional
	PeriodWithLoginFailures *float64 `json:"periodWithLoginFailures,omitempty" tf:"period_with_login_failures,omitempty"`

	// Specifies the session timeout (minutes) that will apply if you or users created
	// using your account do not perform any operations within a specific period.
	// The valid value is range from 15 to 1,440, defaults to 60.
	// +kubebuilder:validation:Optional
	SessionTimeout *float64 `json:"sessionTimeout,omitempty" tf:"session_timeout,omitempty"`

	// Specifies whether to display last login information upon successful login.
	// The value can be true or false.
	// +kubebuilder:validation:Optional
	ShowRecentLoginInfo *bool `json:"showRecentLoginInfo,omitempty" tf:"show_recent_login_info,omitempty"`
}

// LoginPolicySpec defines the desired state of LoginPolicy
type LoginPolicySpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     LoginPolicyParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider LoginPolicyInitParameters `json:"initProvider,omitempty"`
}

// LoginPolicyStatus defines the observed state of LoginPolicy.
type LoginPolicyStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        LoginPolicyObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// LoginPolicy is the Schema for the LoginPolicys API. Manages the account login policy within HuaweiCloud.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,huaweicloud}
type LoginPolicy struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              LoginPolicySpec   `json:"spec"`
	Status            LoginPolicyStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// LoginPolicyList contains a list of LoginPolicys
type LoginPolicyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []LoginPolicy `json:"items"`
}

// Repository type metadata.
var (
	LoginPolicy_Kind             = "LoginPolicy"
	LoginPolicy_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: LoginPolicy_Kind}.String()
	LoginPolicy_KindAPIVersion   = LoginPolicy_Kind + "." + CRDGroupVersion.String()
	LoginPolicy_GroupVersionKind = CRDGroupVersion.WithKind(LoginPolicy_Kind)
)

func init() {
	SchemeBuilder.Register(&LoginPolicy{}, &LoginPolicyList{})
}
