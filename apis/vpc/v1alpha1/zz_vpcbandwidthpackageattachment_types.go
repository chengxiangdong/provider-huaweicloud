/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type VPCBandwidthPackageAttachmentObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type VPCBandwidthPackageAttachmentParameters struct {

	// Bandwidth package unique ID, in the form of `bwp-xxxx`.
	// +crossplane:generate:reference:type=VPCBandwidthPackage
	// +kubebuilder:validation:Optional
	BandwidthPackageID *string `json:"bandwidthPackageId,omitempty" tf:"bandwidth_package_id,omitempty"`

	// +kubebuilder:validation:Optional
	BandwidthPackageIDRef *v1.Reference `json:"bandwidthPackageIdRef,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	BandwidthPackageIDSelector *v1.Selector `json:"bandwidthPackageIdSelector,omitempty" tf:"-"`

	// Bandwidth packet type, currently supports `BGP` type, indicating that the internal resource is BGP IP.
	// +kubebuilder:validation:Optional
	NetworkType *string `json:"networkType,omitempty" tf:"network_type,omitempty"`

	// Bandwidth packet protocol type. Currently `ipv4` and `ipv6` protocol types are supported.
	// +kubebuilder:validation:Optional
	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`

	// The unique ID of the resource, currently supports EIP resources and LB resources, such as `eip-xxxx`, `lb-xxxx`.
	// +kubebuilder:validation:Required
	ResourceID *string `json:"resourceId" tf:"resource_id,omitempty"`

	// Resource types, including `Address`, `LoadBalance`.
	// +kubebuilder:validation:Optional
	ResourceType *string `json:"resourceType,omitempty" tf:"resource_type,omitempty"`
}

// VPCBandwidthPackageAttachmentSpec defines the desired state of VPCBandwidthPackageAttachment
type VPCBandwidthPackageAttachmentSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     VPCBandwidthPackageAttachmentParameters `json:"forProvider"`
}

// VPCBandwidthPackageAttachmentStatus defines the observed state of VPCBandwidthPackageAttachment.
type VPCBandwidthPackageAttachmentStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        VPCBandwidthPackageAttachmentObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// VPCBandwidthPackageAttachment is the Schema for the VPCBandwidthPackageAttachments API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,tencentcloudjet}
type VPCBandwidthPackageAttachment struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              VPCBandwidthPackageAttachmentSpec   `json:"spec"`
	Status            VPCBandwidthPackageAttachmentStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// VPCBandwidthPackageAttachmentList contains a list of VPCBandwidthPackageAttachments
type VPCBandwidthPackageAttachmentList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []VPCBandwidthPackageAttachment `json:"items"`
}

// Repository type metadata.
var (
	VPCBandwidthPackageAttachment_Kind             = "VPCBandwidthPackageAttachment"
	VPCBandwidthPackageAttachment_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: VPCBandwidthPackageAttachment_Kind}.String()
	VPCBandwidthPackageAttachment_KindAPIVersion   = VPCBandwidthPackageAttachment_Kind + "." + CRDGroupVersion.String()
	VPCBandwidthPackageAttachment_GroupVersionKind = CRDGroupVersion.WithKind(VPCBandwidthPackageAttachment_Kind)
)

func init() {
	SchemeBuilder.Register(&VPCBandwidthPackageAttachment{}, &VPCBandwidthPackageAttachmentList{})
}
