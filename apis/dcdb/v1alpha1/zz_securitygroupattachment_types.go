/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type SecurityGroupAttachmentObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type SecurityGroupAttachmentParameters struct {

	// attached instance id.
	// +crossplane:generate:reference:type=HourdbInstance
	// +kubebuilder:validation:Optional
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// +kubebuilder:validation:Optional
	InstanceIDRef *v1.Reference `json:"instanceIdRef,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	InstanceIDSelector *v1.Selector `json:"instanceIdSelector,omitempty" tf:"-"`

	// security group id.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-tencentcloud/apis/vpc/v1alpha1.SecurityGroup
	// +kubebuilder:validation:Optional
	SecurityGroupID *string `json:"securityGroupId,omitempty" tf:"security_group_id,omitempty"`

	// +kubebuilder:validation:Optional
	SecurityGroupIDRef *v1.Reference `json:"securityGroupIdRef,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	SecurityGroupIDSelector *v1.Selector `json:"securityGroupIdSelector,omitempty" tf:"-"`
}

// SecurityGroupAttachmentSpec defines the desired state of SecurityGroupAttachment
type SecurityGroupAttachmentSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     SecurityGroupAttachmentParameters `json:"forProvider"`
}

// SecurityGroupAttachmentStatus defines the observed state of SecurityGroupAttachment.
type SecurityGroupAttachmentStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        SecurityGroupAttachmentObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// SecurityGroupAttachment is the Schema for the SecurityGroupAttachments API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,tencentcloudjet}
type SecurityGroupAttachment struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              SecurityGroupAttachmentSpec   `json:"spec"`
	Status            SecurityGroupAttachmentStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// SecurityGroupAttachmentList contains a list of SecurityGroupAttachments
type SecurityGroupAttachmentList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []SecurityGroupAttachment `json:"items"`
}

// Repository type metadata.
var (
	SecurityGroupAttachment_Kind             = "SecurityGroupAttachment"
	SecurityGroupAttachment_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: SecurityGroupAttachment_Kind}.String()
	SecurityGroupAttachment_KindAPIVersion   = SecurityGroupAttachment_Kind + "." + CRDGroupVersion.String()
	SecurityGroupAttachment_GroupVersionKind = CRDGroupVersion.WithKind(SecurityGroupAttachment_Kind)
)

func init() {
	SchemeBuilder.Register(&SecurityGroupAttachment{}, &SecurityGroupAttachmentList{})
}
